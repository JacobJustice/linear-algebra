{"version":3,"sources":["../../library/contour.js","../../library/utils.js","../../library/vector.js","../../library/matrix.js","../../library/constants.js","constants/theme.js","components/grid-line.js","components/grid.js","components/example-container.js","components/info-container.js","components/grid-example.js","components/arrow.js","components/text.js","components/expression-part.js","components/expression.js","components/in-brackets.js","components/bracketed.js","components/declaration.js","components/views/vector-length.js","components/views/vector-scale.js","components/views/vectors-addition.js","components/views/vectors-subtraction.js","components/views/vectors-dot-product.js","components/views/vector-linear-combination.js","components/contour.js","components/linear-transformation-example.js","components/views/linear-transformation-reflection.js","components/views/linear-transformation-scale.js","components/views/linear-transformation-rotation.js","components/views/linear-transformation-shear.js","components/matrix-matrix-example.js","components/views/matrix-multiplication.js","components/views/matrix-multiplication-reversed.js","components/determinant-example.js","components/views/determinant-scale.js","components/views/determinant-shear.js","components/views/determinant-negative.js","components/views/determinant-zero.js","utils/generic.js","utils/animations.js","utils/three.js","components/3d-example.js","components/views/linear-transformation-3d-shear.js","components/views/3d.js","components/views/index.js","components/menu-item.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["_classCallCheck","__webpack_require__","_createClass","Contour","vectors","this","key","value","matrix","map","v","transform","func","module","exports","EPSILON","areEqual","one","other","epsilon","arguments","length","undefined","Math","abs","toDegrees","radians","PI","toRadians","degrees","sum","arr","reduce","acc","_construct","_toConsumableArray","_require","Vector","_len","components","Array","_key","_ref","_this","component","index","_ref2","_this2","number","hypot","apply","_ref3","_this3","scaleBy","dotProduct","normalize","_ref4","acos","newLength","normalized","_ref5","_this4","every","_this5","columns","Error","multiplied","column","i","c","newComponents","_","Matrix","rows","r","newRows","row","element","j","componentWiseOperation","a","b","parts","coef","matrixRows","slice","concat","result","determinant","dimension","zeros","fill","__","THEME","color","background","mainText","secondaryText","green","blue","purple","yellow","orange","red","Line","styled","line","_templateObject","p","main","theme","grid_line","start","end","_ref$main","react_default","createElement","x1","y1","x2","y2","Container","div","grid_templateObject","getSide","width","height","min","MARGIN","getStepLen","cells","Grid","updateProject","size","step","props","vector","scaled","withNegatedY","middle","add","_this$props","children","side","stepLen","steps","floor","Object","toConsumableArray","React","Component","withSize","monitorHeight","example_container_templateObject","info_container_templateObject","Main","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","project","renderInformation","renderGridContent","_this$props$cells","example_container","grid","setState","info_container","Arrow","arrow_templateObject","Head","polygon","_templateObject2","Text","text","_templateObject3","arrow","direction","headStart","headSide","headPoints","subtract","projectedStart","projectedEnd","points","withLength","x","y","text_templateObject","noMargin","expression_part_templateObject","withTheme","_ref$color","expression_part","components_text","ComponentsContainer","in_brackets_templateObject","in_brackets_templateObject2","BracketsContainer","in_brackets_templateObject3","Bracket","_templateObject4","LeftBracket","_templateObject5","RightBracket","_templateObject6","in_brackets","ci","Number","isInteger","toFixed","bracketed","name","expression","declaration_templateObject","declaration","left","right","declaration_Text","oneColor","otherColor","Fragment","grid_example","firstScaleVector","firstScaleName","firstScaleColor","secondScaleVector","secondScaleName","secondScaleColor","sumColor","sumText","differenceColor","differenceText","linearCombination","iColor","jColor","linearCombinationName","linearCombinationColor","Polygon","contour_templateObject","components_contour","contour","transformedColor","transformed","angle","cos","sin","firstMatrix","secondMatrix","_ref$reversed","reversed","initialColor","firstColor","secondColor","resultColor","resultMatrix","multiply","AB","elements","reverse","Matrices","_ref$withVectors","withVectors","iVector","jVector","hexToRgb","hex","replace","m","g","substring","match","parseInt","getGetAnimatedColor","fromColor","toColor","period","fromRgb","toRgb","distances","fromPart","toPart","Date","now","timePassed","animatedDistance","rgb","round","toString","padStart","join","getGetAnimatedTransformation","fromMatrix","toMatrix","fromComponent","toMatrix4","matrix4","THREE","set","fromMatrix4","toArray","construct","View","_3d_example_templateObject","ThreeScene","animate","transformation","getAnimatedTransformation","cube","material","getAnimatedColor","objects","forEach","obj","_obj$matrix","renderer","render","scene","camera","frameId","window","requestAnimationFrame","_3d_example_View","ref","el","view","_this2$props","_this$view$getBoundin","getBoundingClientRect","position","antialias","setClearColor","setSize","appendChild","domElement","axes","geometry","segments","matrixAutoUpdate","controls","OrbitControls","toDimension","cancelAnimationFrame","removeChild","_3d_templateObject","_3d_Container","container","_this$container$getBo","views","vectors: addition","VectorsAddition","vectors: subtraction","VectorsSubtraction","vectors: length","VectorLength","vectors: scale","VectorScale","vectors: dot product","VectorsDotProduct","vectors: linear combination","VectorLinearCombination","linear transformation: reflection","linear_transformation_example","linear transformation: scale","linear transformation: rotation","linear transformation: shear","linear transformation: shear 3D","_3d_example","matrix-matrix multiplication: AB","matrix_matrix_example","matrix-matrix multiplication: BA","determinant: scale transformation","determinant_example","determinant: shear transformation","determinant: negative","determinant: zero","3D","menu_item_templateObject","selected","menu_item","onClick","menu_item_Container","main_templateObject","Menu","main_templateObject2","keys","viewsNames","main_Container","GlobalStyle","createGlobalStyle","App_templateObject","Boolean","location","hostname","ReactDOM","styled_components_browser_esm","components_main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAA,IAAAA,EAAsBC,EAAQ,IAE9BC,EAAmBD,EAAQ,IAE3BE,EAEA,WACA,aAEA,SAAAA,EAAAC,GACAJ,EAAAK,KAAAF,GAEAE,KAAAD,UAkBA,OAfAF,EAAAC,EAAA,EACAG,IAAA,YACAC,MAAA,SAAAC,GAIA,WAAAL,EAHAE,KAAAD,QAAAK,IAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAH,QAIG,CACHF,IAAA,MACAC,MAAA,SAAAK,GACA,WAAAT,EAAAE,KAAAD,QAAAK,IAAAG,QAIAT,EAxBA,GA2BAU,EAAAC,QAAA,CACAX,+BClCA,IACAY,EADed,EAAQ,IACvBc,QAqBAF,EAAAC,QAAA,CACAE,SApBA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAL,EACA,OAAAQ,KAAAC,IAAAP,EAAAC,GAAAC,GAmBAM,UAhBA,SAAAC,GACA,WAAAA,EAAAH,KAAAI,IAgBAC,UAbA,SAAAC,GACA,OAAAA,EAAAN,KAAAI,GAAA,KAaAG,IAVA,SAAAC,GACA,OAAAA,EAAAC,OAAA,SAAAC,EAAA1B,GACA,OAAA0B,EAAA1B,GACG,wBCnBH,IAAA2B,EAAiBjC,EAAQ,IAEzBkC,EAAyBlC,EAAQ,IAEjCD,EAAsBC,EAAQ,IAE9BC,EAAmBD,EAAQ,IAE3BmC,EAAenC,EAAQ,IACvBe,EAAAoB,EAAApB,SACAS,EAAAW,EAAAX,UACAK,EAAAM,EAAAN,IAEAO,EAEA,WACA,aAEA,SAAAA,IACArC,EAAAK,KAAAgC,GAEA,QAAAC,EAAAlB,UAAAC,OAAAkB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAA6EA,EAAAH,EAAaG,IAC1FF,EAAAE,GAAArB,UAAAqB,GAGApC,KAAAkC,aAmIA,OAhIArC,EAAAmC,EAAA,EACA/B,IAAA,MACAC,MAAA,SAAAmC,GACA,IAAAC,EAAAtC,KAEAkC,EAAAG,EAAAH,WACA,OAAAL,EAAAG,EAAAF,EAAAI,EAAA9B,IAAA,SAAAmC,EAAAC,GACA,OAAAF,EAAAJ,WAAAM,GAAAD,QAGG,CACHtC,IAAA,WACAC,MAAA,SAAAuC,GACA,IAAAC,EAAA1C,KAEAkC,EAAAO,EAAAP,WACA,OAAAL,EAAAG,EAAAF,EAAAI,EAAA9B,IAAA,SAAAmC,EAAAC,GACA,OAAAE,EAAAR,WAAAM,GAAAD,QAGG,CACHtC,IAAA,UACAC,MAAA,SAAAyC,GACA,OAAAd,EAAAG,EAAAF,EAAA9B,KAAAkC,WAAA9B,IAAA,SAAAmC,GACA,OAAAA,EAAAI,QAGG,CACH1C,IAAA,SACAC,MAAA,WACA,OAAAgB,KAAA0B,MAAAC,MAAA3B,KAAAY,EAAA9B,KAAAkC,eAEG,CACHjC,IAAA,aACAC,MAAA,SAAA4C,GACA,IAAAC,EAAA/C,KAGA,OADA8C,EAAAZ,WACAP,OAAA,SAAAC,EAAAW,EAAAC,GACA,OAAAZ,EAAAW,EAAAQ,EAAAb,WAAAM,IACO,KAEJ,CACHvC,IAAA,YACAC,MAAA,WACA,OAAAF,KAAAgD,QAAA,EAAAhD,KAAAgB,YAEG,CACHf,IAAA,wBACAC,MAAA,SAAAW,GACA,IAAAoC,EAAAjD,KAAAkD,YAAAD,WAAApC,EAAAqC,aACA,OAAAvC,EAAAsC,EAAA,KAEG,CACHhD,IAAA,0BACAC,MAAA,SAAAW,GACA,IAAAoC,EAAAjD,KAAAkD,YAAAD,WAAApC,EAAAqC,aACA,OAAAvC,EAAAsC,GAAA,KAEG,CACHhD,IAAA,oBACAC,MAAA,SAAAW,GACA,IAAAoC,EAAAjD,KAAAkD,YAAAD,WAAApC,EAAAqC,aACA,OAAAvC,EAAAsC,EAAA,KAGG,CACHhD,IAAA,eACAC,MAAA,SAAAiD,GACA,IAAAjB,EAAAiB,EAAAjB,WACA,WAAAF,EAAAhC,KAAAkC,WAAA,GAAAA,EAAA,GAAAlC,KAAAkC,WAAA,GAAAA,EAAA,GAAAlC,KAAAkC,WAAA,GAAAA,EAAA,GAAAlC,KAAAkC,WAAA,GAAAA,EAAA,GAAAlC,KAAAkC,WAAA,GAAAA,EAAA,GAAAlC,KAAAkC,WAAA,GAAAA,EAAA,MAEG,CACHjC,IAAA,eACAC,MAAA,SAAAW,GACA,OAAAO,EAAAF,KAAAkC,KAAApD,KAAAiD,WAAApC,IAAAb,KAAAgB,SAAAH,EAAAG,cAEG,CACHf,IAAA,SACAC,MAAA,WACA,OAAAF,KAAAgD,SAAA,KAEG,CACH/C,IAAA,aACAC,MAAA,SAAAmD,GACA,OAAArD,KAAAkD,YAAAF,QAAAK,KAEG,CACHpD,IAAA,YACAC,MAAA,SAAAW,GACA,IAAAyC,EAAAzC,EAAAqC,YACA,OAAAI,EAAAN,QAAAhD,KAAAiD,WAAAK,MAEG,CACHrD,IAAA,UACAC,MAAA,SAAAqD,GACA,IAAAC,EAAAxD,KAGA,OADAuD,EAAArB,WACAuB,MAAA,SAAAlB,EAAAC,GACA,OAAA7B,EAAA4B,EAAAiB,EAAAtB,WAAAM,QAGG,CACHvC,IAAA,YACAC,MAAA,SAAAC,GACA,IAAAuD,EAAA1D,KAEA2D,EAAAxD,EAAAwD,UAEA,GAAAA,EAAA3C,SAAAhB,KAAAkC,WAAAlB,OACA,UAAA4C,MAAA,sEAGA,IAAAC,EAAAF,EAAAvD,IAAA,SAAA0D,EAAAC,GACA,OAAAD,EAAA1D,IAAA,SAAA4D,GACA,OAAAA,EAAAN,EAAAxB,WAAA6B,OAGAE,EAAAJ,EAAA,GAAAzD,IAAA,SAAA8D,EAAAH,GACA,OAAAtC,EAAAoC,EAAAzD,IAAA,SAAA0D,GACA,OAAAA,EAAAC,QAGA,OAAAlC,EAAAG,EAAAF,EAAAmC,QAIAjC,EA7IA,GAgJAxB,EAAAC,QAAA,CACAuB,iEChKA,IAAAH,EAAiBjC,EAAQ,IAEzBkC,EAAyBlC,EAAQ,IAEjCD,EAAsBC,EAAQ,IAE9BC,EAAmBD,EAAQ,IAG3B6B,EADe7B,EAAQ,IACvB6B,IAEA0C,EAEA,WACA,aAEA,SAAAA,IACAxE,EAAAK,KAAAmE,GAEA,QAAAlC,EAAAlB,UAAAC,OAAAoD,EAAA,IAAAjC,MAAAF,GAAAG,EAAA,EAAuEA,EAAAH,EAAaG,IACpFgC,EAAAhC,GAAArB,UAAAqB,GAGApC,KAAAoE,OAqIA,OAlIAvE,EAAAsE,EAAA,EACAlE,IAAA,UACAC,MAAA,WACA,IAAAoC,EAAAtC,KAEA,OAAAA,KAAAoE,KAAA,GAAAhE,IAAA,SAAA8D,EAAAH,GACA,OAAAzB,EAAA8B,KAAAhE,IAAA,SAAAiE,GACA,OAAAA,EAAAN,SAIG,CACH9D,IAAA,yBACAC,MAAA,SAAAK,EAAA8B,GACA,IAAAK,EAAA1C,KAGAsE,EADAjC,EAAA+B,KACAhE,IAAA,SAAAmE,EAAAR,GACA,OAAAQ,EAAAnE,IAAA,SAAAoE,EAAAC,GACA,OAAAlE,EAAAmC,EAAA0B,KAAAL,GAAAU,GAAAD,OAGA,OAAA3C,EAAAsC,EAAArC,EAAAwC,MAEG,CACHrE,IAAA,MACAC,MAAA,SAAAW,GACA,OAAAb,KAAA0E,uBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,GACO/D,KAEJ,CACHZ,IAAA,WACAC,MAAA,SAAAW,GACA,OAAAb,KAAA0E,uBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,GACO/D,KAEJ,CACHZ,IAAA,UACAC,MAAA,SAAAyC,GACA,IAAA2B,EAAAtE,KAAAoE,KAAAhE,IAAA,SAAAmE,GACA,OAAAA,EAAAnE,IAAA,SAAAoE,GACA,OAAAA,EAAA7B,MAGA,OAAAd,EAAAsC,EAAArC,EAAAwC,MAEG,CACHrE,IAAA,WACAC,MAAA,SAAAW,GACA,GAAAb,KAAAoE,KAAA,GAAApD,SAAAH,EAAAuD,KAAApD,OACA,UAAA4C,MAAA,gGAGA,IAAAD,EAAA9C,EAAA8C,UACAW,EAAAtE,KAAAoE,KAAAhE,IAAA,SAAAmE,GACA,OAAAZ,EAAAvD,IAAA,SAAA0D,GACA,OAAArC,EAAA8C,EAAAnE,IAAA,SAAAoE,EAAAT,GACA,OAAAS,EAAAV,EAAAC,UAIA,OAAAlC,EAAAsC,EAAArC,EAAAwC,MAEG,CACHrE,IAAA,YACAC,MAAA,WACA,OAAA2B,EAAAsC,EAAArC,EAAA9B,KAAA2D,cAEG,CACH1D,IAAA,cACAC,MAAA,WACA,IAAA6C,EAAA/C,KAEA,GAAAA,KAAAoE,KAAApD,SAAAhB,KAAAoE,KAAA,GAAApD,OACA,UAAA4C,MAAA,yEAGA,OAAA5D,KAAAoE,KAAApD,OACA,OAAAhB,KAAAoE,KAAA,MAAApE,KAAAoE,KAAA,MAAApE,KAAAoE,KAAA,MAAApE,KAAAoE,KAAA,MAGA,IAAAS,EAAA7E,KAAAoE,KAAA,GAAAhE,IAAA,SAAA0E,EAAAtC,GACA,IAAAuC,EAAAhC,EAAAqB,KAAAY,MAAA,GAAA5E,IAAA,SAAAmE,GACA,SAAAU,OAAAnD,EAAAyC,EAAAS,MAAA,EAAAxC,IAAAV,EAAAyC,EAAAS,MAAAxC,EAAA,OAKA0C,EAAAJ,EAFAjD,EAAAsC,EAAArC,EAAAiD,IAEAI,cACA,OAAA3C,EAAA,MAAA0C,OAEA,OAAAzD,EAAAoD,KAEG,CACH5E,IAAA,cACAC,MAAA,SAAAkF,GACA,IAAA5B,EAAAxD,KAEAqF,EAAA,IAAAlD,MAAAiD,GAAAE,KAAA,GACAhB,EAAAe,EAAAjF,IAAA,SAAA8D,EAAAH,GACA,OAAAsB,EAAAjF,IAAA,SAAAmF,EAAAd,GACA,OAAAjB,EAAAY,KAAAL,SAAA9C,IAAAuC,EAAAY,KAAAL,GAAAU,GACAjB,EAAAY,KAAAL,GAAAU,GAGAV,IAAAU,EAAA,QAGA,OAAA5C,EAAAsC,EAAArC,EAAAwC,MAEG,CACHrE,IAAA,aACAC,MAAA,WACA,OAAAF,KAAAoE,KAAAzC,OAAA,SAAAC,EAAA2C,GACA,SAAAU,OAAAnD,EAAAF,GAAAE,EAAAyC,KACO,MAEJ,CACHtE,IAAA,MACAC,MAAA,SAAAK,GACA,OAAAsB,EAAAsC,EAAArC,EAAA9B,KAAAoE,KAAAhE,IAAA,SAAAmE,EAAAR,GACA,OAAAQ,EAAAnE,IAAA,SAAAoE,EAAAC,GACA,OAAAlE,EAAAiE,EAAAT,EAAAU,aAMAN,EA/IA,GAkJA3D,EAAAC,QAAA,CACA0D,4BC/JA3D,EAAAC,QAAA,CACAC,QAFA,iGCAa8E,EAAQ,CACnBC,MAAO,CACLC,WAAY,UACZC,SAAU,UACVC,cAAe,UACfC,MAAO,UACPC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,IAAK,oLCPT,IAAMC,EAAOC,IAAOC,KAAVC,IACQ,SAAAC,GAAC,OAAKA,EAAEC,KAAO,MAAQ,SAC7B,SAAAD,GAAC,OACTA,EAAEC,KAAOD,EAAEE,MAAMhB,MAAME,SAAWY,EAAEE,MAAMhB,MAAMG,gBAGrCc,EAAA,SAAArE,GAAkC,IAA/BsE,EAA+BtE,EAA/BsE,MAAOC,EAAwBvE,EAAxBuE,IAAwBC,EAAAxE,EAAnBmE,YAAmB,IAAAK,KAC/C,OACEC,EAAAnC,EAAAoC,cAACZ,EAAD,CACEK,KAAMA,EACNQ,GAAIL,EAAMzE,WAAW,GACrB+E,GAAIN,EAAMzE,WAAW,GACrBgF,GAAIN,EAAI1E,WAAW,GACnBiF,GAAIP,EAAI1E,WAAW,oLCTzB,IAAMkF,EAAYhB,IAAOiB,IAAVC,KAUTC,EAAU,SAAAlF,GAAA,IAAGmF,EAAHnF,EAAGmF,MAAOC,EAAVpF,EAAUoF,OAAV,OAAuBvG,KAAKwG,IAAIF,EAAOC,GAAUE,IAE3DC,EAAa,SAAAnF,EAAoBoF,GAAU,IAA3BL,EAA2B/E,EAA3B+E,MAAOC,EAAoBhF,EAApBgF,OAG3B,OAFaF,EAAQ,CAAEC,QAAOC,WACR,EACNI,GAGZC,6MAqDJC,cAAgB,SAACC,EAAMH,GACrB,IAAMI,EAAOL,EAAWI,EAAMH,GAC9BvF,EAAK4F,MAAMH,cAAc,SAAAI,GAEvB,IAAMC,EAASD,EAAOnF,QAAQiF,GACxBI,EAAe,IAAIrG,SACvBoG,EAAOlG,WAAW,IACjBkG,EAAOlG,WAAW,IAEfoG,EAASf,EAAQS,GAAQ,EAC/B,OAAOK,EAAaE,IAAI,IAAIvG,SAAOsG,EAAQA,+EA9DtC,IAAAE,EAC2BxI,KAAKkI,MAA/BF,EADDQ,EACCR,KAAMS,EADPD,EACOC,SAAUZ,EADjBW,EACiBX,MAClBa,EAAOnB,EAAQS,GACfM,EAASI,EAAO,EAChBC,EAAUL,EAAST,EACnBe,EAAQ,IAAIzG,MAAMjB,KAAK2H,MAAMP,EAASK,IACzCrD,KAAK,GACL3D,OACC,SAACC,EAAKsC,EAAGH,GAAT,SAAAkB,OAAA6D,OAAAC,EAAA,EAAAD,CAAmBlH,GAAnB,CAAwB+G,GAAW5E,EAAI,IAAK4E,GAAW5E,EAAI,MAC3D,IAoBJ,OACE+C,EAAAnC,EAAAoC,cAACK,EAAD,KACEN,EAAAnC,EAAAoC,cAAA,OAAKS,MAAOkB,EAAMjB,OAAQiB,GACxB5B,EAAAnC,EAAAoC,cAAA,SACED,EAAAnC,EAAAoC,cAACL,EAAD,CACEF,MAAI,EACJG,MAAO,IAAI3E,SAAOsG,EAAQ,GAC1B1B,IAAK,IAAI5E,SAAOsG,EAAQI,KAE1B5B,EAAAnC,EAAAoC,cAACL,EAAD,CACEF,MAAI,EACJG,MAAO,IAAI3E,SAAO,EAAGsG,GACrB1B,IAAK,IAAI5E,SAAO0G,EAAMJ,KAExBxB,EAAAnC,EAAAoC,cA/BO,kBACb6B,EAAMxI,IAAI,SAAC6H,EAAMlE,GAAP,OACR+C,EAAAnC,EAAAoC,cAACL,EAAD,CACEzG,IAAK8D,EACL4C,MAAO,IAAI3E,SAAOsG,EAASL,EAAM,GACjCrB,IAAK,IAAI5E,SAAOsG,EAASL,EAAMS,QA0B7B,MACA5B,EAAAnC,EAAAoC,cAxBO,kBACb6B,EAAMxI,IAAI,SAAC6H,EAAMlE,GAAP,OACR+C,EAAAnC,EAAAoC,cAACL,EAAD,CACEzG,IAAK8D,EACL4C,MAAO,IAAI3E,SAAO,EAAGsG,EAASL,GAC9BrB,IAAK,IAAI5E,SAAO0G,EAAMJ,EAASL,QAmB7B,OAEDQ,yDAoBkC,IAAfT,EAAelF,EAAfkF,KAAMH,EAAS/E,EAAT+E,MAC5B7H,KAAKkI,MAAMH,gBACMH,EAAWI,EAAMH,KACjBD,EAAW5H,KAAKkI,MAAMF,KAAMH,IAE7C7H,KAAK+H,cAAcC,EAAMH,gDAMzB7H,KAAKkI,MAAMH,eACb/H,KAAK+H,cAAc/H,KAAKkI,MAAMF,KAAMhI,KAAKkI,MAAML,cA/ElCmB,IAAMC,WAoFVC,qBAAS,CAAEC,eAAe,GAA1BD,CAAkCpB,kPC3GlC1B,UAAOiB,IAAtB+B,2NCAehD,UAAOiB,IAAtBgC,KC0CeC,cArCb,SAAAA,EAAYpB,GAAO,IAAA5F,EAAA,OAAAwG,OAAAS,EAAA,EAAAT,CAAA9I,KAAAsJ,IACjBhH,EAAAwG,OAAAU,EAAA,EAAAV,CAAA9I,KAAA8I,OAAAW,EAAA,EAAAX,CAAAQ,GAAAI,KAAA1J,KAAMkI,KACDyB,MAAQ,CACXC,aAAS3I,GAHMqB,wEAMV,IAAAI,EAAA1C,KACC4J,EAAY5J,KAAK2J,MAAjBC,QADDpB,EAEsDxI,KAAKkI,MAA1D2B,EAFDrB,EAECqB,kBAAmBC,EAFpBtB,EAEoBsB,kBAFpBC,EAAAvB,EAEuCX,aAFvC,IAAAkC,EAE+C,GAF/CA,EAeP,OACEjD,EAAAnC,EAAAoC,cAACiD,EAAD,KACElD,EAAAnC,EAAAoC,cAACkD,EAAD,CACEpC,MAAOA,EACPE,cAAe,SAAA6B,GAAO,OAAIlH,EAAKwH,SAAS,CAAEN,cAE1C9C,EAAAnC,EAAAoC,cAlBU,WACd,OAAI6C,GAAWE,EACNA,EAAkB,CAAEF,YAEtB,MAcH,OAEF9C,EAAAnC,EAAAoC,cAACoD,EAAD,KACErD,EAAAnC,EAAAoC,cAfc,WAClB,OAAI8C,EACKA,IAEF,MAWH,eA/BSb,IAAMC,sTCFzB,IAAMmB,EAAQhE,IAAOC,KAAVgE,IAEC,SAAA9D,GAAC,OAAIA,EAAEd,QAGb6E,EAAOlE,IAAOmE,QAAVC,IACA,SAAAjE,GAAC,OAAIA,EAAEd,QAGXgF,EAAOrE,IAAOsE,KAAVC,IAEA,SAAApE,GAAC,OAAIA,EAAEd,QAGFmF,EAAA,SAAAvI,GAAsC,IAAnC8F,EAAmC9F,EAAnC8F,OAAQuC,EAA2BrI,EAA3BqI,KAAMjF,EAAqBpD,EAArBoD,MAAOmE,EAAcvH,EAAduH,QAC/BiB,EAAY1C,EAAOjF,YAEnB4H,EAAYD,EAAU7H,QAAQmF,EAAOnH,SAAW,IAChD+J,EAAW,IAAI/I,SACnB6I,EAAU3I,WAAW,IACpB2I,EAAU3I,WAAW,IACtBc,QAAQ,IACJgI,EAAa,CACjBF,EAAUvC,IAAIwC,GACdD,EAAUG,SAASF,GACnB5C,GAEC/H,IAAIwJ,GACJxJ,IAAI,SAAAC,GAAC,OAAIA,EAAE6B,aAERgJ,EAAiBtB,EAAQ,IAAI5H,SAAO,EAAG,IACvCmJ,EAAevB,EAAQzB,GAW7B,OACErB,EAAAnC,EAAAoC,cAAA,SACED,EAAAnC,EAAAoC,cAACqD,EAAD,CACE3E,MAAOA,EACPuB,GAAIkE,EAAehJ,WAAW,GAC9B+E,GAAIiE,EAAehJ,WAAW,GAC9BgF,GAAIiE,EAAajJ,WAAW,GAC5BiF,GAAIgE,EAAajJ,WAAW,KAE9B4E,EAAAnC,EAAAoC,cAACuD,EAAD,CAAM7E,MAAOA,EAAO2F,OAAQJ,IAC5BlE,EAAAnC,EAAAoC,cAnBmB,WACrB,IAAK2D,EAAM,OAAO,KADS,IAEnBxI,EAAe0H,EAAQzB,EAAOkD,WAAWlD,EAAOnH,SAAW,KAA3DkB,WACR,OACE4E,EAAAnC,EAAAoC,cAAC0D,EAAD,CAAMhF,MAAOA,EAAO6F,EAAGpJ,EAAW,GAAIqJ,EAAGrJ,EAAW,IACjDwI,IAcH,oHCtDStE,UAAOG,EAAtBiF,IACW,SAAAjF,GAAC,OAAIA,EAAEd,OACA,SAAAc,GAAC,OAAKA,EAAEkF,SAAW,MAAQ,qMCF9BrF,UAAOiB,IAAtBqE,IAIW,SAAAnF,GAAC,OAAIA,EAAEd,QCoBHkG,cApBI,SAAAtJ,GAAuD,IAApDoG,EAAoDpG,EAApDoG,SAAUhC,EAA0CpE,EAA1CoE,MAA0CmF,EAAAvJ,EAAnCoD,aAAmC,IAAAmG,EAA3BnF,EAAMhB,MAAME,SAAeiG,EAaxE,OACE9E,EAAAnC,EAAAoC,cAAC8E,EAAD,KACE/E,EAAAnC,EAAAoC,cAdY,kBACd0B,EAAS9G,OAAO,SAACC,EAAKW,EAAWwB,GAC/B,OAAIA,IAAM0E,EAASzH,OAAS,EAAG,GAAAiE,OAAA6D,OAAAC,EAAA,EAAAD,CAAWlH,GAAX,CAAgBW,IAC/C,GAAA0C,OAAA6D,OAAAC,EAAA,EAAAD,CACKlH,GADL,CAEEW,EACAuE,EAAAnC,EAAAoC,cAAC+E,EAAD,CAAM7L,IAAK8D,EAAG0B,MAAOA,GAClB,IADH,IAEI,QAGL,KAGD,swBClBN,IAAMsG,EAAsB3F,IAAOiB,IAAV2E,KAOnB/C,EAAY7C,IAAOG,EAAV0F,IACJ,SAAA1F,GAAC,OAAIA,EAAEd,QAIZyG,EAAoB9F,IAAOiB,IAAV8E,KAMjBC,EAAUhG,IAAOiB,IAAVgF,IAEa,SAAA9F,GAAC,OAAIA,EAAEd,OACJ,SAAAc,GAAC,OAAIA,EAAEd,QAG9B6G,GAAclG,YAAOgG,EAAPhG,CAAHmG,IACU,SAAAhG,GAAC,OAAIA,EAAEd,QAG5B+G,GAAepG,YAAOgG,EAAPhG,CAAHqG,IACU,SAAAlG,GAAC,OAAIA,EAAEd,QAGpBiH,GAAA,SAAArK,GAAwB,IAArBoD,EAAqBpD,EAArBoD,MAAO9B,EAActB,EAAdsB,QAYvB,OACEmD,EAAAnC,EAAAoC,cAACmF,EAAD,KACEpF,EAAAnC,EAAAoC,cAACuF,GAAD,CAAa7G,MAAOA,IACpBqB,EAAAnC,EAAAoC,cAde,kBACjBpD,EAAQvD,IAAI,SAAC0D,EAAQ6I,GAAT,OACV7F,EAAAnC,EAAAoC,cAACgF,EAAD,CAAqB9L,IAAK0M,GACvB7I,EAAO1D,IAAI,SAACmC,EAAWwB,GAAZ,OACV+C,EAAAnC,EAAAoC,cAACkC,EAAD,CAAWxD,MAAOA,EAAOxF,IAAK8D,GAC3B6I,OAAOC,UAAUtK,GAAaA,EAAYA,EAAUuK,QAAQ,UASnE,MACAhG,EAAAnC,EAAAoC,cAACyF,GAAD,CAAc/G,MAAOA,MC7CZsH,GAAA,SAAA1K,GAAA,IAAGsB,EAAHtB,EAAGsB,QAASqJ,EAAZ3K,EAAY2K,KAAMvH,EAAlBpD,EAAkBoD,MAAlB,OACbqB,EAAAnC,EAAAoC,cAACkG,EAAD,CAAYxH,MAAOA,GACjBqB,EAAAnC,EAAAoC,cAAC+E,EAAD,CAAMrG,MAAOA,GAAQuH,GACrBlG,EAAAnC,EAAAoC,cAAC2F,GAAD,CAAY/I,QAASA,EAAS8B,MAAOA,oHCJzC,IAAMgF,GAAOrE,IAAOG,EAAV2G,KACC,SAAA3G,GAAC,OAAIA,EAAEd,QAIH0H,GAAA,SAAA9K,GAAA,IAAG+K,EAAH/K,EAAG+K,KAAMC,EAAThL,EAASgL,MAAO5H,EAAhBpD,EAAgBoD,MAAhB,OACbqB,EAAAnC,EAAAoC,cAACkG,EAAD,CAAYxH,MAAOA,GACjBqB,EAAAnC,EAAAoC,cAACuG,GAAD,KAAOF,GACPtG,EAAAnC,EAAAoC,cAACuG,GAAD,KAAOD,KCwCI1B,eA5CS,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACnB7F,EAAM,IAAIoB,SAAO,EAAG,GAEpBuL,EAAW9G,EAAMhB,MAAMI,MAEvBhF,EAAQ,IAAImB,SAAO,EAAG,GAEtBwL,EAAa/G,EAAMhB,MAAMS,IAgCzBgC,EAAQ,CAAE2B,kBA9BU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC/C,EAAIsB,YACd8K,KAXU,UAYVvH,MAAO8H,IAETzG,EAAAnC,EAAAoC,cAACoG,GAAD,CAAaC,KAAI,KAAAnI,OAdL,UAcK,MAAoBoI,MAAOzM,EAAII,SAAS8L,QAAQ,KACjEhG,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC9C,EAAMqB,YAChB8K,KAbY,UAcZvH,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAACoG,GAAD,CACEC,KAAI,KAAAnI,OAjBQ,UAiBR,MACJoI,MAAOxM,EAAMG,SAAS8L,QAAQ,OAeDhD,kBAXT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQvH,EAAK8J,KA5B1B,UA4ByCjF,MAAO8H,IAC5DzG,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQtH,EACR6J,KA5BY,UA6BZjF,MAAO+H,OAMb,OAAO1G,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCUXyD,eApDS,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACnB0B,EAAS,IAAInG,SAAO,EAAG,GAEvByD,EAAQgB,EAAMhB,MAAMI,MAGpB8H,EAAmBxF,EAAOnF,QADb,IAEb4K,EAAc,GAAA3I,OAFD,IAECA,OALP,WAMP4I,EAAkBpH,EAAMhB,MAAMS,IAG9B4H,EAAoB3F,EAAOnF,SADb,GAEd+K,EAAe,GAAA9I,QAFD,GAECA,OAVR,WAWP+I,EAAmBvH,EAAMhB,MAAMK,KAkC/BoC,EAAQ,CAAE2B,kBAhCU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CAAepJ,QAAS,CAACwE,EAAOjG,YAAa8K,KAfpC,UAegDvH,MAAOA,IAChEqB,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAACgK,EAAiBzL,YAC3B8K,KAAMY,EACNnI,MAAOoI,IAET/G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAACmK,EAAkB5L,YAC5B8K,KAAMe,EACNtI,MAAOuI,MAqBsBlE,kBAjBT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQA,EAAQuC,KA9BhC,UA8B4CjF,MAAOA,IAC5DqB,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQwF,EACRjD,KAAMkD,EACNnI,MAAOoI,IAET/G,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQ2F,EACRpD,KAAMqD,EACNtI,MAAOuI,OAMb,OAAOlH,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCFXyD,eA/CS,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACnB7F,EAAM,IAAIoB,SAAO,EAAG,GACpBnB,EAAQ,IAAImB,SAAO,EAAG,GAGtBuL,EAAW9G,EAAMhB,MAAMI,MACvB2H,EAAa/G,EAAMhB,MAAMS,IACzBzE,EAAMb,EAAI2H,IAAI1H,GACdoN,EAAWxH,EAAMhB,MAAMK,KACvBoI,EAAO,GAAAjJ,OANG,UAMH,OAAAA,OALK,WAsCZiD,EAAQ,CAAE2B,kBA/BU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC/C,EAAIsB,YACd8K,KAZU,UAaVvH,MAAO8H,IAETzG,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC9C,EAAMqB,YAChB8K,KAhBY,UAiBZvH,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAClC,EAAIS,YACd8K,KAAMkB,EACNzI,MAAOwI,MAgBsBnE,kBAZT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQvH,EAAK8J,KA7B1B,UA6ByCjF,MAAO8H,IAC5DzG,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQtH,EACR6J,KAhCY,UAiCZjF,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQ1G,EAAKiJ,KAAMwD,EAASzI,MAAOwI,OAKhE,OAAOnH,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCQXyD,eApDS,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACnB7F,EAAM,IAAIoB,SAAO,EAAG,GACpBnB,EAAQ,IAAImB,SAAO,EAAG,GAGtBuL,EAAW9G,EAAMhB,MAAMI,MACvB2H,EAAa/G,EAAMhB,MAAMS,IACzBzE,EAAMb,EAAIqK,SAASpK,GACnBsN,EAAkB1H,EAAMhB,MAAMK,KAC9BsI,EAAc,GAAAnJ,OANJ,UAMI,OAAAA,OALF,WA2CZiD,EAAQ,CAAE2B,kBApCU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC/C,EAAIsB,YACd8K,KAZU,UAaVvH,MAAO8H,IAETzG,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC9C,EAAMqB,YAChB8K,KAhBY,UAiBZvH,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAClC,EAAIS,YACd8K,KAAMoB,EACN3I,MAAO0I,MAqBsBrE,kBAjBT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQvH,EAAK8J,KA7B1B,UA6ByCjF,MAAO8H,IAC5DzG,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQtH,EACR6J,KAhCY,UAiCZjF,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQ1G,EACRiJ,KAAM0D,EACN3I,MAAO0I,OAMb,OAAOrH,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCRXyD,eAxCW,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACrB7F,EAAM,IAAIoB,SAAO,EAAG,GACpBnB,EAAQ,IAAImB,SAAO,EAAG,GAGtBuL,EAAW9G,EAAMhB,MAAMI,MACvB2H,EAAa/G,EAAMhB,MAAMS,IACzBjD,EAAarC,EAAIqC,WAAWpC,GAAOiM,QAAQ,GA4B3C5E,EAAQ,CAAE2B,kBA1BU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC/C,EAAIsB,YACd8K,KAVU,UAWVvH,MAAO8H,IAETzG,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC9C,EAAMqB,YAChB8K,KAdY,UAeZvH,MAAO+H,IAET1G,EAAAnC,EAAAoC,cAACoG,GAAD,CAAaC,KAAM,uBAAWC,MAAOpK,MAcN6G,kBAXT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQvH,EAAK8J,KAvB1B,UAuByCjF,MAAO8H,IAC5DzG,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQtH,EACR6J,KA1BY,UA2BZjF,MAAO+H,OAMb,OAAO1G,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCIXyD,eA1CS,SAAAtJ,GAAe,IAAZoE,EAAYpE,EAAZoE,MACnB1C,EAAI,IAAI/B,SAAO,EAAG,GAClByC,EAAI,IAAIzC,SAAO,EAAG,GAGlBqM,EAAoBtK,EAAEf,QAFT,GAE6BuF,IAAI9D,EAAEzB,QADlC,IAIdsL,EAAS7H,EAAMhB,MAAMI,MAErB0I,EAAS9H,EAAMhB,MAAMS,IACrBsI,EAAqB,aAAAvJ,OARR,GAQQA,OAJb,UAIa,OAAAA,OAPP,GAOOA,OAFb,WAGRwJ,EAAyBhI,EAAMhB,MAAMK,KAyBrCoC,EAAQ,CAAE2B,kBAvBU,kBACxB/C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACgG,GAAD,CAAepJ,QAAS,CAACI,EAAE7B,YAAa8K,KAT9B,UAS2CvH,MAAO6I,IAC5DxH,EAAAnC,EAAAoC,cAACgG,GAAD,CAAepJ,QAAS,CAACc,EAAEvC,YAAa8K,KAR9B,UAQ2CvH,MAAO8I,IAC5DzH,EAAAnC,EAAAoC,cAACgG,GAAD,CACEpJ,QAAS,CAAC0K,EAAkBnM,YAC5B8K,KAAMwB,EACN/I,MAAOgJ,MAgBsB3E,kBAZT,SAAArH,GAAA,IAAGmH,EAAHnH,EAAGmH,QAAH,OACxB9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQpE,EAAG2G,KApB1B,UAoBuCjF,MAAO6I,IACxDxH,EAAAnC,EAAAoC,cAAC6D,EAAD,CAAOhB,QAASA,EAASzB,OAAQ1D,EAAGiG,KAnB1B,UAmBuCjF,MAAO8I,IACxDzH,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQkG,EACR3D,KAAM8D,EACN/I,MAAOgJ,OAMb,OAAO3H,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,8HC5C1B,IAAMwG,GAAUtI,IAAOmE,QAAVoE,KACH,SAAApI,GAAC,OAAIA,EAAEd,QAIFmJ,GAAA,SAAAvM,GAAiC,IAA9BwM,EAA8BxM,EAA9BwM,QAASpJ,EAAqBpD,EAArBoD,MAAOmE,EAAcvH,EAAduH,QAC1BwB,EAASyD,EAAQzO,IAAIwJ,GAAS7J,QAAQK,IAAI,SAAAC,GAAC,OAAIA,EAAE6B,aACvD,OAAO4E,EAAAnC,EAAAoC,cAAC2H,GAAD,CAAStD,OAAQA,EAAQ3F,MAAOA,KCDnCoJ,GAAU,IAAI/O,WAAQ,CAC1B,IAAIkC,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,KAmCD2J,eAhCG,SAAAtJ,GAAuB,IAApBoE,EAAoBpE,EAApBoE,MAAOtG,EAAakC,EAAblC,OACpB2O,EAAmBrI,EAAMhB,MAAMK,KA2B/BoC,EAAQ,CAAE2B,kBATU,WACxB,OACE/C,EAAAnC,EAAAoC,cAACgG,GAAD,CACEC,KAAK,IACLrJ,QAASxD,EAAOwD,UAChB8B,MAAOqJ,KAIsBhF,kBA1BT,SAAArH,GAAiB,IAAdmH,EAAcnH,EAAdmH,QACrBmF,EAAcF,GAAQvO,UAAUH,GACtC,OACE2G,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6H,GAAD,CACEC,QAASA,GACTpJ,MAAOgB,EAAMhB,MAAMS,IACnB0D,QAASA,IAEX9C,EAAAnC,EAAAoC,cAAC6H,GAAD,CACEC,QAASE,EACTtJ,MAAOqJ,EACPlF,QAASA,OAejB,OAAO9C,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCxCpB/H,GAAS,IAAIgE,UAAO,EAAE,EAAG,GAAI,CAAC,EAAG,ICAjChE,GAAS,IAAIgE,UAAO,CAAC,EAAG,GAAI,CAAC,EAAG,aCAhC6K,GAAQzN,qBAAU,IAElBpB,GAAS,IAAIgE,UACjB,CAACjD,KAAK+N,IAAID,KAAS9N,KAAKgO,IAAIF,KAC5B,CAAC9N,KAAKgO,IAAIF,IAAQ9N,KAAK+N,IAAID,MCLvB7O,GAAS,IAAIgE,UAAO,CAAC,EAAG,IAAM,CAAC,EAAG,ICOlC0K,GAAU,IAAI/O,WAAQ,CAC1B,IAAIkC,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,KAgED2J,eA7DG,SAAAtJ,GAA4D,IAAzD8M,EAAyD9M,EAAzD8M,YAAaC,EAA4C/M,EAA5C+M,aAA4CC,EAAAhN,EAA9BiN,gBAA8B,IAAAD,KAAZ5I,EAAYpE,EAAZoE,MAC1D8I,EAAe9I,EAAMhB,MAAMS,IAC3BsJ,EAAa/I,EAAMhB,MAAMK,KACzB2J,EAAchJ,EAAMhB,MAAMI,MAC1B6J,EAAcjJ,EAAMhB,MAAMO,OAC1B2J,EAAeL,EACjBH,EAAYS,SAASR,GACrBA,EAAaQ,SAAST,GAcpBU,EAAK,WACT,IAAMC,EAAW,CACfhJ,EAAAnC,EAAAoC,cAAC+E,EAAD,CAAM7L,IAAK,IAAKwF,MAAO+J,GAAvB,KAGA1I,EAAAnC,EAAAoC,cAAC+E,EAAD,CAAM7L,IAAK,IAAKwF,MAAOgK,GAAvB,MAIF,OAAOH,EAAWQ,EAASC,UAAYD,GAEnCE,EAAW,WACf,IAAMF,EAAW,CACfhJ,EAAAnC,EAAAoC,cAAC2F,GAAD,CACEzM,IAAK,IACLwF,MAAO+J,EACP7L,QAASwL,EAAYxL,YAEvBmD,EAAAnC,EAAAoC,cAAC2F,GAAD,CACEzM,IAAK,IACLwF,MAAOgK,EACP9L,QAASyL,EAAazL,aAG1B,OAAO2L,EAAWQ,EAASC,UAAYD,GAYnC5H,EAAQ,CAAE2B,kBAVU,WACxB,OACE/C,EAAAnC,EAAAoC,cAACkG,EAAD,KACEnG,EAAAnC,EAAAoC,cAAC+E,EAAD,CAAMrG,MAAOiK,GAAb,KACA5I,EAAAnC,EAAAoC,cAAC8I,EAAD,MACA/I,EAAAnC,EAAAoC,cAACiJ,EAAD,MACAlJ,EAAAnC,EAAAoC,cAAC2F,GAAD,CAAYjH,MAAOiK,EAAa/L,QAASgM,EAAahM,cAIzBmG,kBAjDT,SAAArH,GAAiB,IAAdmH,EAAcnH,EAAdmH,QACrBmF,EAAcF,GAAQvO,UAAUqP,GACtC,OACE7I,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6H,GAAD,CAAaC,QAASA,GAASpJ,MAAO8J,EAAc3F,QAASA,IAC7D9C,EAAAnC,EAAAoC,cAAC6H,GAAD,CACEC,QAASE,EACTtJ,MAAOiK,EACP9F,QAASA,OA0CjB,OAAO9C,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCvEpBiH,GAAc,IAAIhL,UAAO,EAAE,EAAG,GAAI,CAAC,EAAG,IACtCiL,GAAe,IAAIjL,UAAO,CAAC,EAAG,IAAM,CAAC,EAAG,ICDxCgL,GAAc,IAAIhL,UAAO,EAAE,EAAG,GAAI,CAAC,EAAG,IACtCiL,GAAe,IAAIjL,UAAO,CAAC,EAAG,IAAM,CAAC,EAAG,ICOxC0K,GAAU,IAAI/O,WAAQ,CAC1B,IAAIkC,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,GACd,IAAIA,SAAO,EAAG,KAwED2J,eArEG,SAAAtJ,GAAmD,IAAhDoE,EAAgDpE,EAAhDoE,MAAOtG,EAAyCkC,EAAzClC,OAAQ0H,EAAiCxF,EAAjCwF,MAAiCoI,EAAA5N,EAA1B6N,mBAA0B,IAAAD,KAC7DV,EAAe9I,EAAMhB,MAAMS,IAC3B4I,EAAmBrI,EAAMhB,MAAMK,KAC/BiJ,EAAcF,GAAQvO,UAAUH,GA8DhC+H,EAAQ,CAAEL,QAAOgC,kBAZG,WACxB,OACE/C,EAAAnC,EAAAoC,cAACkG,EAAD,KACEnG,EAAAnC,EAAAoC,cAAC8E,EAAD,KACE/E,EAAAnC,EAAAoC,cAAC+E,EAAD,aACAhF,EAAAnC,EAAAoC,cAAC2F,GAAD,CAAYjH,MAAOqJ,EAAkBnL,QAASxD,EAAOwD,YACrDmD,EAAAnC,EAAAoC,cAAC+E,EAAD,WAEFhF,EAAAnC,EAAAoC,cAAC+E,EAAD,KAAO3L,EAAOgF,iBAIsB2E,kBA7DhB,SAAArH,GAAiB,IAAdmH,EAAcnH,EAAdmH,QAqC3B,OACE9C,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6H,GAAD,CAAaC,QAASA,GAASpJ,MAAO8J,EAAc3F,QAASA,IAC7D9C,EAAAnC,EAAAoC,cAAC6H,GAAD,CACEC,QAASE,EACTtJ,MAAOqJ,EACPlF,QAASA,IAEX9C,EAAAnC,EAAAoC,cA5CY,WACd,IAAKmJ,EAAa,OAAO,KAEzB,IAEMC,EAAU,IAAInO,SAAO,EAAG,GACxBoO,EAAU,IAAIpO,SAAO,EAAG,GAC9B,OACE8E,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQgI,EACRzF,KATc,UAUdjF,MAAO8J,IAETzI,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQiI,EACR1F,KAdc,UAedjF,MAAO8J,IAETzI,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQgI,EAAQ7P,UAAUH,GAC1BuK,KArBc,UAsBdjF,MAAOqJ,IAEThI,EAAAnC,EAAAoC,cAAC6D,EAAD,CACEhB,QAASA,EACTzB,OAAQiI,EAAQ9P,UAAUH,GAC1BuK,KA1Bc,UA2BdjF,MAAOqJ,MAaX,SAiBN,OAAOhI,EAAAnC,EAAAoC,cAAC2G,EAAgBxF,KCjFpB/H,GAAS,IAAIgE,UAAO,CAAC,EAAG,GAAI,CAAC,EAAG,ICAhChE,GAAS,IAAIgE,UAAO,CAAC,EAAG,IAAM,CAAC,EAAG,ICAlChE,GAAS,IAAIgE,UAAO,CAAC,EAAG,GAAI,EAAE,GAAI,ICAlChE,GAAS,IAAIgE,UAAO,CAAC,EAAG,GAAI,CAAC,EAAG,gCCLzBkM,GAAW,SAAAC,GAAG,OACzBA,EACGC,QACC,mCACA,SAACC,EAAGnM,EAAGoM,EAAG7L,GAAV,MAAgB,IAAMP,EAAIA,EAAIoM,EAAIA,EAAI7L,EAAIA,IAE3C8L,UAAU,GACVC,MAAM,SACNvQ,IAAI,SAAAkL,GAAC,OAAIsF,SAAStF,EAAG,OCNbuF,GAAsB,SAACC,EAAWC,EAASC,GACtD,IAAMC,EAAUZ,GAASS,GACnBI,EAAQb,GAASU,GACjBI,EAAYF,EAAQ7Q,IAAI,SAACgR,EAAU5O,GACvC,IAAM6O,EAASH,EAAM1O,GACrB,OAAO4O,GAAYC,EAASA,EAASD,EAAW,IAAMA,EAAWC,IAE7D1K,EAAQ2K,KAAKC,MACnB,OAAO,WACL,IACMC,EADMF,KAAKC,MACQ5K,EACzB,GAAI6K,EAAaR,EAAQ,OAAOD,EAEhC,IAAMU,EAAmBD,EAAaR,EAChCU,EAAMT,EAAQ7Q,IAAI,SAACgR,EAAU5O,GACjC,IACMyF,EADWkJ,EAAU3O,GACHiP,EACxB,OAAOvQ,KAAKyQ,OAAOP,EAAWnJ,GAAQ,OAExC,ODXoB,SAAC5D,EAAGoM,EAAG7L,GAAP,MACtB,IAAM,CAACP,EAAGoM,EAAG7L,GAAGxE,IAAI,SAAAkL,GAAC,OAAIA,EAAEsG,SAAS,IAAIC,SAAS,EAAG,OAAMC,KAAK,KCU9CjP,WAAR,EAAAiG,OAAAC,EAAA,EAAAD,CAAY4I,MAIVK,GAA+B,SAACC,EAAYC,EAAUjB,GACjE,IAAMG,EAAYc,EAAShH,SAAS+G,GAC9BrL,EAAQ2K,KAAKC,MACnB,OAAO,WACL,IACMC,EADMF,KAAKC,MACQ5K,EACzB,GAAI6K,EAAaR,EAAQ,OAAOiB,EAEhC,IAAMR,EAAmBD,EAAaR,EAMtC,OALkBgB,EAAW5R,IAAI,SAAC8R,EAAenO,EAAGU,GAGlD,OAAOyN,EAFUf,EAAU/M,KAAKL,GAAGU,GACXgN,eCjCjBU,GAAY,SAAAhS,GACvB,IAAMiS,EAAU,IAAIC,WAEpB,OADAD,EAAQE,IAARzP,MAAAuP,EAAOtJ,OAAAC,EAAA,EAAAD,CAAQ3I,EAAO+B,eACfkQ,GAGIG,GAAc,SAAAH,GACzB,IAAMlQ,EAAakQ,EAAQI,UACrBpO,EAAO,IAAIjC,MAAM,GACpBmD,KAAK,GACLlF,IAAI,SAAC8D,EAAGH,GAAJ,OAAU7B,EAAW8C,MAAU,EAAJjB,EAAiB,GAATA,EAAI,MAC9C,OAAO+E,OAAA2J,GAAA,EAAA3J,CAAI3E,UAAX2E,OAAAC,EAAA,EAAAD,CAAqB1E,+GCDvB,IAAMsO,GAAOtM,IAAOiB,IAAVsL,MAOJC,8MAoEJC,QAAU,WACR,IAAMC,EAAiBxQ,EAAKyQ,4BACtBX,EAAUD,GAAUW,GAC1BxQ,EAAK0Q,KAAKC,SAASxN,MAAM6M,IAAIhQ,EAAK4Q,oBAClC5Q,EAAK6Q,QAAQC,QAAQ,SAAAC,GAAG,IAAAC,EAAA,OAAIA,EAAAD,EAAIlT,QAAOmS,IAAXzP,MAAAyQ,EAAAxK,OAAAC,EAAA,EAAAD,CAAkBsJ,EAAQI,cACtDlQ,EAAKiR,SAASC,OAAOlR,EAAKmR,MAAOnR,EAAKoR,QACtCpR,EAAKqR,QAAUC,OAAOC,sBAAsBvR,EAAKuQ,kFAzE1C,IAAAnQ,EAAA1C,KAQP,OACE8G,EAAAnC,EAAAoC,cAACiD,EAAD,KACElD,EAAAnC,EAAAoC,cAAC+M,GAAD,CAAMC,IAAK,SAAAC,GAAE,OAAKtR,EAAKuR,KAAOD,KAC9BlN,EAAAnC,EAAAoC,cAACoD,EAAD,KACErD,EAAAnC,EAAAoC,cAXc,WAAM,IAAAmN,EACaxR,EAAKwF,MAAlC2B,EADgBqK,EAChBrK,kBAAmBpD,EADHyN,EACGzN,MAC3B,OAAIoD,EACKA,EAAkB,CAAEiF,iBAAkBrI,EAAMhB,MAAMK,OAEpD,MAMH,oDAMY,IAAAqO,EACQnU,KAAKiU,KAAKG,wBAA5B5M,EADU2M,EACV3M,MAAOC,EADG0M,EACH1M,OACfzH,KAAKyT,MAAQ,IAAIpB,SACjBrS,KAAK0T,OAAS,IAAIrB,qBAAwB,IAAK7K,EAAQC,GACvDzH,KAAK0T,OAAOW,SAAS/B,IAAI,EAAG,EAAG,GAJb,IAMV7L,EAAUzG,KAAKkI,MAAfzB,MACRzG,KAAKuT,SAAW,IAAIlB,iBAAoB,CAAEiC,WAAW,IACrDtU,KAAKuT,SAASgB,cAAc9N,EAAMhB,MAAMC,YACxC1F,KAAKuT,SAASiB,QAAQhN,EAAOC,GAC7BzH,KAAKiU,KAAKQ,YAAYzU,KAAKuT,SAASmB,YAEpC,IAAMnF,EAAe9I,EAAMhB,MAAMS,IAC3ByO,EAAO,IAAItC,cAAiB,GAC5BuC,EAAW,IAAIvC,eAAkB,EAAG,EAAG,GAC7CrS,KAAK6U,SAAW,IAAIxC,gBAClB,IAAIA,iBAAoBuC,GACxB,IAAIvC,qBAAwB,CAAE5M,MAAOgB,EAAMhB,MAAME,YAEnD3F,KAAKgT,KAAO,IAAIX,QACduC,EACA,IAAIvC,qBAAwB,CAAE5M,MAAO8J,KAEvCvP,KAAKmT,QAAU,CAACnT,KAAKgT,KAAMhT,KAAK6U,UAChC7U,KAAKmT,QAAQC,QAAQ,SAAAC,GAAG,OAAKA,EAAIyB,kBAAmB,IACpD9U,KAAKyT,MAAMlL,IAAIvI,KAAKgT,KAAM2B,EAAM3U,KAAK6U,UAErC7U,KAAK+U,SAAW,IAAIC,KAAchV,KAAK0T,QAEvC1T,KAAKkT,iBAAmBrC,GACtBtB,EACA9I,EAAMhB,MAAMK,KApDH,KAuDX,IAAMkM,EAAaO,GAAYvS,KAAKgT,KAAK7S,QACnC8R,EAAWjS,KAAKkI,MAAM/H,OAAO8U,YAAY,GAC/CjV,KAAK+S,0BAA4BhB,GAC/BC,EACAC,EA3DS,KA8DXjS,KAAK2T,QAAUE,sBAAsB7T,KAAK6S,wDAI1CqC,qBAAqBlV,KAAK2T,SAC1B3T,KAAKiU,KAAKkB,YAAYnV,KAAKuT,SAASmB,mBAjEf1L,IAAMC,WA8EhB0C,eAAUiH,IC5FnBzS,GAAS,IAAIgE,UAAO,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,8GCMvD,IAAMiD,GAAYhB,IAAOiB,IAAV+N,MAKTjV,GAAS,IAAIgE,UAAO,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAIjDyO,8MAsDJC,QAAU,WACR,IAAMC,EAAiBxQ,EAAKyQ,4BACtBX,EAAUD,GAAUW,GAC1BxQ,EAAK0Q,KAAKC,SAASxN,MAAM6M,IAAIhQ,EAAK4Q,oBAClC5Q,EAAK6Q,QAAQC,QAAQ,SAAAC,GAAG,IAAAC,EAAA,OAAIA,EAAAD,EAAIlT,QAAOmS,IAAXzP,MAAAyQ,EAAAxK,OAAAC,EAAA,EAAAD,CAAkBsJ,EAAQI,cACtDlQ,EAAKiR,SAASC,OAAOlR,EAAKmR,MAAOnR,EAAKoR,QACtCpR,EAAKqR,QAAUC,OAAOC,sBAAsBvR,EAAKuQ,kFA3D1C,IAAAnQ,EAAA1C,KACP,OAAO8G,EAAAnC,EAAAoC,cAACsO,GAAD,CAAWtB,IAAK,SAAAC,GAAE,OAAKtR,EAAK4S,UAAYtB,iDAG7B,IAAAuB,EACQvV,KAAKsV,UAAUlB,wBAAjC5M,EADU+N,EACV/N,MAAOC,EADG8N,EACH9N,OACfzH,KAAKyT,MAAQ,IAAIpB,SACjBrS,KAAK0T,OAAS,IAAIrB,qBAAwB,IAAK7K,EAAQC,GACvDzH,KAAK0T,OAAOW,SAAS/B,IAAI,EAAG,EAAG,GAJb,IAMV7L,EAAUzG,KAAKkI,MAAfzB,MACRzG,KAAKuT,SAAW,IAAIlB,iBAAoB,CAAEiC,WAAW,IACrDtU,KAAKuT,SAASgB,cAAc9N,EAAMhB,MAAMC,YACxC1F,KAAKuT,SAASiB,QAAQhN,EAAOC,GAC7BzH,KAAKsV,UAAUb,YAAYzU,KAAKuT,SAASmB,YAEzC,IAAMnF,EAAe9I,EAAMhB,MAAMS,IAC3ByO,EAAO,IAAItC,cAAiB,GAC5BuC,EAAW,IAAIvC,eAAkB,EAAG,EAAG,GAC7CrS,KAAK6U,SAAW,IAAIxC,gBAClB,IAAIA,iBAAoBuC,GACxB,IAAIvC,qBAAwB,CAAE5M,MAAOgB,EAAMhB,MAAME,YAEnD3F,KAAKgT,KAAO,IAAIX,QACduC,EACA,IAAIvC,qBAAwB,CAAE5M,MAAO8J,KAEvCvP,KAAKmT,QAAU,CAACnT,KAAKgT,KAAMhT,KAAK6U,UAChC7U,KAAKmT,QAAQC,QAAQ,SAAAC,GAAG,OAAKA,EAAIyB,kBAAmB,IACpD9U,KAAKyT,MAAMlL,IAAIvI,KAAKgT,KAAM2B,EAAM3U,KAAK6U,UAErC7U,KAAK+U,SAAW,IAAIC,KAAchV,KAAK0T,QAEvC1T,KAAKkT,iBAAmBrC,GACtBtB,EACA9I,EAAMhB,MAAMK,KAtCH,KAyCX,IAAMkM,EAAaO,GAAYvS,KAAKgT,KAAK7S,QACnC8R,EAAW9R,GAAO8U,YAAY,GACpCjV,KAAK+S,0BAA4BhB,GAC/BC,EACAC,EA7CS,KAgDXjS,KAAK2T,QAAUE,sBAAsB7T,KAAK6S,wDAI1CqC,qBAAqBlV,KAAK2T,SAC1B3T,KAAKsV,UAAUH,YAAYnV,KAAKuT,SAASmB,mBAnDpB1L,IAAMC,WCFhBuM,GAAA,CACbC,oBAAqBC,GACrBC,uBAAwBC,GACxBC,kBAAmBC,GACnBC,iBAAkBC,GAClBC,uBAAwBC,GACxBC,8BAA+BC,GAC/BC,oClBnBa,kBAAMvP,EAAAnC,EAAAoC,cAACuP,GAAD,CAAWnW,OAAQA,MkBoBtCoW,+BjBpBa,kBAAMzP,EAAAnC,EAAAoC,cAACuP,GAAD,CAAWnW,OAAQA,MiBqBtCqW,kChBhBa,kBAAM1P,EAAAnC,EAAAoC,cAACuP,GAAD,CAAWnW,OAAQA,MgBiBtCsW,+BfvBa,kBAAM3P,EAAAnC,EAAAoC,cAACuP,GAAD,CAAWnW,OAAQA,MewBtCuW,kCFtBa,WAUb,OAAO5P,EAAAnC,EAAAoC,cAAC4P,GAAD,CAAS9M,kBATU,SAAAxH,GAA0B,IAAvByM,EAAuBzM,EAAvByM,iBAC3B,OACEhI,EAAAnC,EAAAoC,cAACgG,GAAD,CACEC,KAAK,IACLrJ,QAASxD,GAAOwD,UAChB8B,MAAOqJ,KAIyC3O,OAAQA,MEa9DyW,mCbvBa,kBACb9P,EAAAnC,EAAAoC,cAAC8P,GAAD,CAAW1H,YAAaA,GAAaC,aAAcA,MauBnD0H,mCZxBa,kBACbhQ,EAAAnC,EAAAoC,cAAC8P,GAAD,CAAW1H,YAAaA,GAAaC,aAAcA,GAAcE,UAAQ,KYwBzEyH,oCV1Ba,kBAAMjQ,EAAAnC,EAAAoC,cAACiQ,GAAD,CAAoBnP,MAAO,EAAG1H,OAAQA,MU2BzD8W,oCT3Ba,kBAAMnQ,EAAAnC,EAAAoC,cAACiQ,GAAD,CAAoBnP,MAAO,EAAG1H,OAAQA,MS4BzD+W,wBR5Ba,kBACbpQ,EAAAnC,EAAAoC,cAACiQ,GAAD,CAAoB9G,aAAW,EAACrI,MAAO,EAAG1H,OAAQA,MQ4BlDgX,oBP7Ba,kBACbrQ,EAAAnC,EAAAoC,cAACiQ,GAAD,CAAoB9G,aAAW,EAACrI,MAAO,EAAG1H,OAAQA,MO6BlDiX,KDgDazL,YAAUiH,uMElFzB,IAAMxL,GAAYhB,IAAOG,EAAV8Q,KAGJ,SAAA9Q,GAAC,OACRA,EAAE+Q,SAAW/Q,EAAEE,MAAMhB,MAAME,SAAWY,EAAEE,MAAMhB,MAAMG,eAG3C,SAAAW,GAAC,OAAIA,EAAEE,MAAMhB,MAAME,WAIjB4R,GAAA,SAAAlV,GAAA,IAAGqI,EAAHrI,EAAGqI,KAAM8M,EAATnV,EAASmV,QAASF,EAAlBjV,EAAkBiV,SAAlB,OACbxQ,EAAAnC,EAAAoC,cAAC0Q,GAAD,CAAWD,QAASA,EAASF,SAAUA,GACpC5M,mXCVL,IAAMtD,GAAYhB,IAAOiB,IAAVqQ,MAWTC,GAAOvR,IAAOiB,IAAVuQ,MAsCKtO,eA/Bb,SAAAA,EAAYpB,GAAO,IAAA5F,EAAA,OAAAwG,OAAAS,EAAA,EAAAT,CAAA9I,KAAAsJ,IACjBhH,EAAAwG,OAAAU,EAAA,EAAAV,CAAA9I,KAAA8I,OAAAW,EAAA,EAAAX,CAAAQ,GAAAI,KAAA1J,KAAMkI,KACDyB,MAAQ,CACXsK,KAAMnL,OAAO+O,KAAKrC,IAAO,IAHVlT,wEAOV,IAAAI,EAAA1C,KACCiU,EAASjU,KAAK2J,MAAdsK,KACFvB,EAAO8C,GAAMvB,GACb6D,EAAahP,OAAO+O,KAAKrC,IAU/B,OACE1O,EAAAnC,EAAAoC,cAACgR,GAAD,KACEjR,EAAAnC,EAAAoC,cAAC2L,EAAD,MACA5L,EAAAnC,EAAAoC,cAAC4Q,GAAD,KACE7Q,EAAAnC,EAAAoC,cAbY,kBAChB+Q,EAAW1X,IAAI,SAAA4M,GAAI,OACjBlG,EAAAnC,EAAAoC,cAACwQ,GAAD,CACEtX,IAAK+M,EACLsK,SAAUtK,IAASiH,EACnBvJ,KAAMsC,EACNwK,QAAS,kBAAM9U,EAAKwH,SAAS,CAAE+J,KAAMjH,UAOrC,eAzBShE,IAAMC,qVCjBzB,IAAM+O,GAAcC,YAAHC,KAMO,SAAA3R,GAAC,OAAIA,EAAEE,MAAMhB,MAAMC,YAW9B,SAAAa,GAAC,OAAIA,EAAEE,MAAMhB,MAAME,WCXZwS,QACW,cAA7BvE,OAAOwE,SAASC,UAEe,UAA7BzE,OAAOwE,SAASC,UAEhBzE,OAAOwE,SAASC,SAAS1H,MACvB,2DCbN2H,IAAS9E,OAAO1M,EAAAnC,EAAAoC,cFqBD,kBACbD,EAAAnC,EAAAoC,cAACwR,EAAA,EAAD,CAAe9R,MAAOjB,GACpBsB,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA8I,SAAA,KACE3G,EAAAnC,EAAAoC,cAACiR,GAAD,MACAlR,EAAAnC,EAAAoC,cAACyR,GAAD,SEzBU,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.11cced17.chunk.js","sourcesContent":["var _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Contour =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Contour(vectors) {\n    _classCallCheck(this, Contour);\n\n    this.vectors = vectors;\n  }\n\n  _createClass(Contour, [{\n    key: \"transform\",\n    value: function transform(matrix) {\n      var newVectors = this.vectors.map(function (v) {\n        return v.transform(matrix);\n      });\n      return new Contour(newVectors);\n    }\n  }, {\n    key: \"map\",\n    value: function map(func) {\n      return new Contour(this.vectors.map(func));\n    }\n  }]);\n\n  return Contour;\n}();\n\nmodule.exports = {\n  Contour: Contour\n};","var _require = require('./constants'),\n    EPSILON = _require.EPSILON;\n\nvar areEqual = function areEqual(one, other) {\n  var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(one - other) < epsilon;\n};\n\nvar toDegrees = function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar toRadians = function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar sum = function sum(arr) {\n  return arr.reduce(function (acc, value) {\n    return acc + value;\n  }, 0);\n};\n\nmodule.exports = {\n  areEqual: areEqual,\n  toDegrees: toDegrees,\n  toRadians: toRadians,\n  sum: sum\n};","var _construct = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/construct\");\n\nvar _toConsumableArray = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./utils'),\n    areEqual = _require.areEqual,\n    toDegrees = _require.toDegrees,\n    sum = _require.sum;\n\nvar Vector =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n      components[_key] = arguments[_key];\n    }\n\n    this.components = components;\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(_ref) {\n      var _this = this;\n\n      var components = _ref.components;\n      return _construct(Vector, _toConsumableArray(components.map(function (component, index) {\n        return _this.components[index] + component;\n      })));\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(_ref2) {\n      var _this2 = this;\n\n      var components = _ref2.components;\n      return _construct(Vector, _toConsumableArray(components.map(function (component, index) {\n        return _this2.components[index] - component;\n      })));\n    }\n  }, {\n    key: \"scaleBy\",\n    value: function scaleBy(number) {\n      return _construct(Vector, _toConsumableArray(this.components.map(function (component) {\n        return component * number;\n      })));\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.hypot.apply(Math, _toConsumableArray(this.components));\n    }\n  }, {\n    key: \"dotProduct\",\n    value: function dotProduct(_ref3) {\n      var _this3 = this;\n\n      var components = _ref3.components;\n      return components.reduce(function (acc, component, index) {\n        return acc + component * _this3.components[index];\n      }, 0);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return this.scaleBy(1 / this.length());\n    }\n  }, {\n    key: \"haveSameDirectionWith\",\n    value: function haveSameDirectionWith(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, 1);\n    }\n  }, {\n    key: \"haveOppositeDirectionTo\",\n    value: function haveOppositeDirectionTo(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, -1);\n    }\n  }, {\n    key: \"isPerpendicularTo\",\n    value: function isPerpendicularTo(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, 0);\n    } // 3D vectors only\n\n  }, {\n    key: \"crossProduct\",\n    value: function crossProduct(_ref4) {\n      var components = _ref4.components;\n      return new Vector(this.components[1] * components[2] - this.components[2] * components[1], this.components[2] * components[0] - this.components[0] * components[2], this.components[0] * components[1] - this.components[1] * components[0]);\n    }\n  }, {\n    key: \"angleBetween\",\n    value: function angleBetween(other) {\n      return toDegrees(Math.acos(this.dotProduct(other) / (this.length() * other.length())));\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this.scaleBy(-1);\n    }\n  }, {\n    key: \"withLength\",\n    value: function withLength(newLength) {\n      return this.normalize().scaleBy(newLength);\n    }\n  }, {\n    key: \"projectOn\",\n    value: function projectOn(other) {\n      var normalized = other.normalize();\n      return normalized.scaleBy(this.dotProduct(normalized));\n    }\n  }, {\n    key: \"equalTo\",\n    value: function equalTo(_ref5) {\n      var _this4 = this;\n\n      var components = _ref5.components;\n      return components.every(function (component, index) {\n        return areEqual(component, _this4.components[index]);\n      });\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix) {\n      var _this5 = this;\n\n      var columns = matrix.columns();\n\n      if (columns.length !== this.components.length) {\n        throw new Error('Matrix columns length should be equal to vector components length.');\n      }\n\n      var multiplied = columns.map(function (column, i) {\n        return column.map(function (c) {\n          return c * _this5.components[i];\n        });\n      });\n      var newComponents = multiplied[0].map(function (_, i) {\n        return sum(multiplied.map(function (column) {\n          return column[i];\n        }));\n      });\n      return _construct(Vector, _toConsumableArray(newComponents));\n    }\n  }]);\n\n  return Vector;\n}();\n\nmodule.exports = {\n  Vector: Vector\n};","var _construct = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/construct\");\n\nvar _toConsumableArray = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./utils'),\n    sum = _require.sum;\n\nvar Matrix =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Matrix() {\n    _classCallCheck(this, Matrix);\n\n    for (var _len = arguments.length, rows = new Array(_len), _key = 0; _key < _len; _key++) {\n      rows[_key] = arguments[_key];\n    }\n\n    this.rows = rows;\n  }\n\n  _createClass(Matrix, [{\n    key: \"columns\",\n    value: function columns() {\n      var _this = this;\n\n      return this.rows[0].map(function (_, i) {\n        return _this.rows.map(function (r) {\n          return r[i];\n        });\n      });\n    }\n  }, {\n    key: \"componentWiseOperation\",\n    value: function componentWiseOperation(func, _ref) {\n      var _this2 = this;\n\n      var rows = _ref.rows;\n      var newRows = rows.map(function (row, i) {\n        return row.map(function (element, j) {\n          return func(_this2.rows[i][j], element);\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      return this.componentWiseOperation(function (a, b) {\n        return a + b;\n      }, other);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.componentWiseOperation(function (a, b) {\n        return a - b;\n      }, other);\n    }\n  }, {\n    key: \"scaleBy\",\n    value: function scaleBy(number) {\n      var newRows = this.rows.map(function (row) {\n        return row.map(function (element) {\n          return element * number;\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(other) {\n      if (this.rows[0].length !== other.rows.length) {\n        throw new Error('The number of columns of this matrix is not equal to the number of rows of the given matrix.');\n      }\n\n      var columns = other.columns();\n      var newRows = this.rows.map(function (row) {\n        return columns.map(function (column) {\n          return sum(row.map(function (element, i) {\n            return element * column[i];\n          }));\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      return _construct(Matrix, _toConsumableArray(this.columns()));\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      var _this3 = this;\n\n      if (this.rows.length !== this.rows[0].length) {\n        throw new Error('Only matrices with the same number of rows and columns are supported.');\n      }\n\n      if (this.rows.length === 2) {\n        return this.rows[0][0] * this.rows[1][1] - this.rows[0][1] * this.rows[1][0];\n      }\n\n      var parts = this.rows[0].map(function (coef, index) {\n        var matrixRows = _this3.rows.slice(1).map(function (row) {\n          return [].concat(_toConsumableArray(row.slice(0, index)), _toConsumableArray(row.slice(index + 1)));\n        });\n\n        var matrix = _construct(Matrix, _toConsumableArray(matrixRows));\n\n        var result = coef * matrix.determinant();\n        return index % 2 === 0 ? result : -result;\n      });\n      return sum(parts);\n    }\n  }, {\n    key: \"toDimension\",\n    value: function toDimension(dimension) {\n      var _this4 = this;\n\n      var zeros = new Array(dimension).fill(0);\n      var newRows = zeros.map(function (_, i) {\n        return zeros.map(function (__, j) {\n          if (_this4.rows[i] && _this4.rows[i][j] !== undefined) {\n            return _this4.rows[i][j];\n          }\n\n          return i === j ? 1 : 0;\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"components\",\n    value: function components() {\n      return this.rows.reduce(function (acc, row) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(row));\n      }, []);\n    }\n  }, {\n    key: \"map\",\n    value: function map(func) {\n      return _construct(Matrix, _toConsumableArray(this.rows.map(function (row, i) {\n        return row.map(function (element, j) {\n          return func(element, i, j);\n        });\n      })));\n    }\n  }]);\n\n  return Matrix;\n}();\n\nmodule.exports = {\n  Matrix: Matrix\n};","var EPSILON = 0.00000001;\nmodule.exports = {\n  EPSILON: EPSILON\n};","export const THEME = {\n  color: {\n    background: '#2c3e50',\n    mainText: '#FFFFFF',\n    secondaryText: '#bdc3c7',\n    green: '#2ecc71',\n    blue: '#3498db',\n    purple: '#9b59b6',\n    yellow: '#f1c40f',\n    orange: '#e67e22',\n    red: '#e74c3c'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Line = styled.line`\n  stroke-width: ${p => (p.main ? '1px' : '0.4px')};\n  stroke: ${p =>\n    p.main ? p.theme.color.mainText : p.theme.color.secondaryText};\n`\n\nexport default ({ start, end, main = false }) => {\n  return (\n    <Line\n      main={main}\n      x1={start.components[0]}\n      y1={start.components[1]}\n      x2={end.components[0]}\n      y2={end.components[1]}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { withSize } from 'react-sizeme'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridLine from './grid-line'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst MARGIN = 10\n\nconst getSide = ({ width, height }) => Math.min(width, height) - MARGIN * 2\n\nconst getStepLen = ({ width, height }, cells) => {\n  const side = getSide({ width, height })\n  const middle = side / 2\n  return middle / cells\n}\n\nclass Grid extends React.Component {\n  render() {\n    const { size, children, cells } = this.props\n    const side = getSide(size)\n    const middle = side / 2\n    const stepLen = middle / cells\n    const steps = new Array(Math.floor(middle / stepLen))\n      .fill(0)\n      .reduce(\n        (acc, _, i) => [...acc, stepLen * (i + 1), -stepLen * (i + 1)],\n        []\n      )\n\n    const XLines = () =>\n      steps.map((step, i) => (\n        <GridLine\n          key={i}\n          start={new Vector(middle + step, 0)}\n          end={new Vector(middle + step, side)}\n        />\n      ))\n    const YLines = () =>\n      steps.map((step, i) => (\n        <GridLine\n          key={i}\n          start={new Vector(0, middle + step)}\n          end={new Vector(side, middle + step)}\n        />\n      ))\n\n    return (\n      <Container>\n        <svg width={side} height={side}>\n          <g>\n            <GridLine\n              main\n              start={new Vector(middle, 0)}\n              end={new Vector(middle, side)}\n            />\n            <GridLine\n              main\n              start={new Vector(0, middle)}\n              end={new Vector(side, middle)}\n            />\n            <XLines />\n            <YLines />\n          </g>\n          {children}\n        </svg>\n      </Container>\n    )\n  }\n\n  updateProject = (size, cells) => {\n    const step = getStepLen(size, cells)\n    this.props.updateProject(vector => {\n      // we don't have transformation method in vector class yet, so:\n      const scaled = vector.scaleBy(step)\n      const withNegatedY = new Vector(\n        scaled.components[0],\n        -scaled.components[1]\n      )\n      const middle = getSide(size) / 2\n      return withNegatedY.add(new Vector(middle, middle))\n    })\n  }\n\n  componentWillReceiveProps({ size, cells }) {\n    if (this.props.updateProject) {\n      const newStepLen = getStepLen(size, cells)\n      const oldStepLen = getStepLen(this.props.size, cells)\n      if (newStepLen !== oldStepLen) {\n        this.updateProject(size, cells)\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.updateProject) {\n      this.updateProject(this.props.size, this.props.cells)\n    }\n  }\n}\n\nexport default withSize({ monitorHeight: true })(Grid)\n","import styled from 'styled-components'\n\nexport default styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  flex-direction: row;\n  position: relative;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\n\nimport Grid from './grid'\nimport Container from './example-container'\nimport InfoContainer from './info-container'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      project: undefined\n    }\n  }\n  render() {\n    const { project } = this.state\n    const { renderInformation, renderGridContent, cells = 10 } = this.props\n    const Content = () => {\n      if (project && renderGridContent) {\n        return renderGridContent({ project })\n      }\n      return null\n    }\n    const Information = () => {\n      if (renderInformation) {\n        return renderInformation()\n      }\n      return null\n    }\n    return (\n      <Container>\n        <Grid\n          cells={cells}\n          updateProject={project => this.setState({ project })}\n        >\n          <Content />\n        </Grid>\n        <InfoContainer>\n          <Information />\n        </InfoContainer>\n      </Container>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nconst Arrow = styled.line`\n  stroke-width: 2px;\n  stroke: ${p => p.color};\n`\n\nconst Head = styled.polygon`\n  fill: ${p => p.color};\n`\n\nconst Text = styled.text`\n  font-size: 26px;\n  fill: ${p => p.color};\n`\n\nexport default ({ vector, text, color, project }) => {\n  const direction = vector.normalize()\n\n  const headStart = direction.scaleBy(vector.length() - 0.6)\n  const headSide = new Vector(\n    direction.components[1],\n    -direction.components[0]\n  ).scaleBy(0.2)\n  const headPoints = [\n    headStart.add(headSide),\n    headStart.subtract(headSide),\n    vector\n  ]\n    .map(project)\n    .map(v => v.components)\n\n  const projectedStart = project(new Vector(0, 0))\n  const projectedEnd = project(vector)\n\n  const PositionedText = () => {\n    if (!text) return null\n    const { components } = project(vector.withLength(vector.length() + 0.2))\n    return (\n      <Text color={color} x={components[0]} y={components[1]}>\n        {text}\n      </Text>\n    )\n  }\n  return (\n    <g>\n      <Arrow\n        color={color}\n        x1={projectedStart.components[0]}\n        y1={projectedStart.components[1]}\n        x2={projectedEnd.components[0]}\n        y2={projectedEnd.components[1]}\n      />\n      <Head color={color} points={headPoints} />\n      <PositionedText />\n    </g>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.p`\n  color: ${p => p.color};\n  margin-right: ${p => (p.noMargin ? '0px' : '6px')};\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: ${p => p.color};\n  margin: 10px;\n  font-size: 24px;\n`\n","import React from 'react'\nimport { withTheme } from 'styled-components'\n\nimport Text from './text'\nimport ExpressionPart from './expression-part'\n\nconst Expression = ({ children, theme, color = theme.color.mainText }) => {\n  const Content = () =>\n    children.reduce((acc, component, i) => {\n      if (i === children.length - 1) return [...acc, component]\n      return [\n        ...acc,\n        component,\n        <Text key={i} color={color}>\n          {' '}\n          ={' '}\n        </Text>\n      ]\n    }, [])\n  return (\n    <ExpressionPart>\n      <Content />\n    </ExpressionPart>\n  )\n}\n\nexport default withTheme(Expression)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ComponentsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`\n\nconst Component = styled.p`\n  color: ${p => p.color};\n  margin: 4px;\n`\n\nconst BracketsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 6px;\n`\n\nconst Bracket = styled.div`\n  width: 8px;\n  border-top: 1px solid ${p => p.color};\n  border-bottom: 1px solid ${p => p.color};\n`\n\nconst LeftBracket = styled(Bracket)`\n  border-left: 1px solid ${p => p.color};\n`\n\nconst RightBracket = styled(Bracket)`\n  border-right: 1px solid ${p => p.color};\n`\n\nexport default ({ color, columns }) => {\n  const Components = () =>\n    columns.map((column, ci) => (\n      <ComponentsContainer key={ci}>\n        {column.map((component, i) => (\n          <Component color={color} key={i}>\n            {Number.isInteger(component) ? component : component.toFixed(2)}\n          </Component>\n        ))}\n      </ComponentsContainer>\n    ))\n\n  return (\n    <BracketsContainer>\n      <LeftBracket color={color} />\n      <Components />\n      <RightBracket color={color} />\n    </BracketsContainer>\n  )\n}\n","import React from 'react'\n\nimport Expression from './expression'\nimport InBrackets from './in-brackets'\nimport Text from './text'\n\nexport default ({ columns, name, color }) => (\n  <Expression color={color}>\n    <Text color={color}>{name}</Text>\n    <InBrackets columns={columns} color={color} />\n  </Expression>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Expression from './expression'\n\nconst Text = styled.p`\n  color: ${p => p.color};\n  margin-right: 6px;\n`\n\nexport default ({ left, right, color }) => (\n  <Expression color={color}>\n    <Text>{left}</Text>\n    <Text>{right}</Text>\n  </Expression>\n)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\nimport Declaration from '../declaration'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const oneName = 'v⃗'\n  const oneColor = theme.color.green\n\n  const other = new Vector(6, 2)\n  const otherName = 'w⃗'\n  const otherColor = theme.color.red\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <Declaration left={`||${oneName}||`} right={one.length().toFixed(2)} />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <Declaration\n        left={`||${otherName}||`}\n        right={other.length().toFixed(2)}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const vector = new Vector(2, 4)\n  const name = 'v⃗'\n  const color = theme.color.green\n\n  const firstScale = 0.5\n  const firstScaleVector = vector.scaleBy(firstScale)\n  const firstScaleName = `${firstScale}${name}`\n  const firstScaleColor = theme.color.red\n\n  const secondScale = -2\n  const secondScaleVector = vector.scaleBy(secondScale)\n  const secondScaleName = `${secondScale}${name}`\n  const secondScaleColor = theme.color.blue\n\n  const renderInformation = () => (\n    <>\n      <BracketedView columns={[vector.components]} name={name} color={color} />\n      <BracketedView\n        columns={[firstScaleVector.components]}\n        name={firstScaleName}\n        color={firstScaleColor}\n      />\n      <BracketedView\n        columns={[secondScaleVector.components]}\n        name={secondScaleName}\n        color={secondScaleColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={vector} text={name} color={color} />\n      <Arrow\n        project={project}\n        vector={firstScaleVector}\n        text={firstScaleName}\n        color={firstScaleColor}\n      />\n      <Arrow\n        project={project}\n        vector={secondScaleVector}\n        text={secondScaleName}\n        color={secondScaleColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const sum = one.add(other)\n  const sumColor = theme.color.blue\n  const sumText = `${oneName} + ${otherName}`\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <BracketedView\n        columns={[sum.components]}\n        name={sumText}\n        color={sumColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n      <Arrow project={project} vector={sum} text={sumText} color={sumColor} />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const sum = one.subtract(other)\n  const differenceColor = theme.color.blue\n  const differenceText = `${oneName} - ${otherName}`\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <BracketedView\n        columns={[sum.components]}\n        name={differenceText}\n        color={differenceColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n      <Arrow\n        project={project}\n        vector={sum}\n        text={differenceText}\n        color={differenceColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\nimport Declaration from '../declaration'\n\nconst VectorsDotProduct = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const dotProduct = one.dotProduct(other).toFixed(2)\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <Declaration left={'v⃗ · w⃗'} right={dotProduct} />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsDotProduct)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const i = new Vector(1, 0)\n  const j = new Vector(0, 1)\n  const firstCoeff = 2\n  const secondCoeff = 5\n  const linearCombination = i.scaleBy(firstCoeff).add(j.scaleBy(secondCoeff))\n\n  const iName = 'i⃗'\n  const iColor = theme.color.green\n  const jName = 'j⃗'\n  const jColor = theme.color.red\n  const linearCombinationName = `v⃗ = ${firstCoeff}${iName} + ${secondCoeff}${jName}`\n  const linearCombinationColor = theme.color.blue\n\n  const renderInformation = () => (\n    <>\n      <BracketedView columns={[i.components]} name={iName} color={iColor} />\n      <BracketedView columns={[j.components]} name={jName} color={jColor} />\n      <BracketedView\n        columns={[linearCombination.components]}\n        name={linearCombinationName}\n        color={linearCombinationColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={i} text={iName} color={iColor} />\n      <Arrow project={project} vector={j} text={jName} color={jColor} />\n      <Arrow\n        project={project}\n        vector={linearCombination}\n        text={linearCombinationName}\n        color={linearCombinationColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Polygon = styled.polygon`\n  fill: ${p => p.color};\n  opacity: 0.2;\n`\n\nexport default ({ contour, color, project }) => {\n  const points = contour.map(project).vectors.map(v => v.components)\n  return <Polygon points={points} color={color} />\n}\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Contour } from 'linear-algebra/contour'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from './grid-example'\nimport BracketedView from './bracketed'\nimport ContourView from './contour'\n\nconst contour = new Contour([\n  new Vector(0, 0),\n  new Vector(0, 4),\n  new Vector(4, 4),\n  new Vector(4, 0)\n])\n\nconst LTExample = ({ theme, matrix }) => {\n  const transformedColor = theme.color.blue\n  const renderGridContent = ({ project }) => {\n    const transformed = contour.transform(matrix)\n    return (\n      <>\n        <ContourView\n          contour={contour}\n          color={theme.color.red}\n          project={project}\n        />\n        <ContourView\n          contour={transformed}\n          color={transformedColor}\n          project={project}\n        />\n      </>\n    )\n  }\n  const renderInformation = () => {\n    return (\n      <BracketedView\n        name=\"T\"\n        columns={matrix.columns()}\n        color={transformedColor}\n      />\n    )\n  }\n  const props = { renderInformation, renderGridContent }\n  return <GridExample {...props} />\n}\n\nexport default withTheme(LTExample)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([-1, 0], [0, 1])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([2, 0], [0, 2])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\nimport { toRadians } from 'linear-algebra/utils'\nimport LTExample from '../linear-transformation-example'\n\nconst angle = toRadians(45)\n\nconst matrix = new Matrix(\n  [Math.cos(angle), -Math.sin(angle)],\n  [Math.sin(angle), Math.cos(angle)]\n)\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Contour } from 'linear-algebra/contour'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from './grid-example'\nimport Expression from './expression'\nimport InBrackets from './in-brackets'\nimport Text from './text'\nimport ContourView from './contour'\n\nconst contour = new Contour([\n  new Vector(0, 0),\n  new Vector(0, 4),\n  new Vector(4, 4),\n  new Vector(4, 0)\n])\n\nconst LTExample = ({ firstMatrix, secondMatrix, reversed = false, theme }) => {\n  const initialColor = theme.color.red\n  const firstColor = theme.color.blue\n  const secondColor = theme.color.green\n  const resultColor = theme.color.yellow\n  const resultMatrix = reversed\n    ? firstMatrix.multiply(secondMatrix)\n    : secondMatrix.multiply(firstMatrix)\n  const renderGridContent = ({ project }) => {\n    const transformed = contour.transform(resultMatrix)\n    return (\n      <>\n        <ContourView contour={contour} color={initialColor} project={project} />\n        <ContourView\n          contour={transformed}\n          color={resultColor}\n          project={project}\n        />\n      </>\n    )\n  }\n  const AB = () => {\n    const elements = [\n      <Text key={'A'} color={firstColor}>\n        A\n      </Text>,\n      <Text key={'B'} color={secondColor}>\n        B\n      </Text>\n    ]\n    return reversed ? elements.reverse() : elements\n  }\n  const Matrices = () => {\n    const elements = [\n      <InBrackets\n        key={'A'}\n        color={firstColor}\n        columns={firstMatrix.columns()}\n      />,\n      <InBrackets\n        key={'B'}\n        color={secondColor}\n        columns={secondMatrix.columns()}\n      />\n    ]\n    return reversed ? elements.reverse() : elements\n  }\n  const renderInformation = () => {\n    return (\n      <Expression>\n        <Text color={resultColor}>C</Text>\n        <AB />\n        <Matrices />\n        <InBrackets color={resultColor} columns={resultMatrix.columns()} />\n      </Expression>\n    )\n  }\n  const props = { renderInformation, renderGridContent }\n  return <GridExample {...props} />\n}\n\nexport default withTheme(LTExample)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport MMExample from '../matrix-matrix-example'\n\nconst firstMatrix = new Matrix([-1, 0], [0, 1])\nconst secondMatrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => (\n  <MMExample firstMatrix={firstMatrix} secondMatrix={secondMatrix} />\n)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport MMExample from '../matrix-matrix-example'\n\nconst firstMatrix = new Matrix([-1, 0], [0, 1])\nconst secondMatrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => (\n  <MMExample firstMatrix={firstMatrix} secondMatrix={secondMatrix} reversed />\n)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Contour } from 'linear-algebra/contour'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from './grid-example'\nimport Expression from './expression'\nimport ExpressionPart from './expression-part'\nimport InBrackets from './in-brackets'\nimport Text from './text'\nimport ContourView from './contour'\nimport Arrow from './arrow'\n\nconst contour = new Contour([\n  new Vector(0, 0),\n  new Vector(0, 1),\n  new Vector(1, 1),\n  new Vector(1, 0)\n])\n\nconst LTExample = ({ theme, matrix, cells, withVectors = false }) => {\n  const initialColor = theme.color.red\n  const transformedColor = theme.color.blue\n  const transformed = contour.transform(matrix)\n  const renderGridContent = ({ project }) => {\n    const Vectors = () => {\n      if (!withVectors) return null\n\n      const iVectorName = 'i⃗'\n      const jVectorName = 'j⃗'\n      const iVector = new Vector(1, 0)\n      const jVector = new Vector(0, 1)\n      return (\n        <>\n          <Arrow\n            project={project}\n            vector={iVector}\n            text={iVectorName}\n            color={initialColor}\n          />\n          <Arrow\n            project={project}\n            vector={jVector}\n            text={jVectorName}\n            color={initialColor}\n          />\n          <Arrow\n            project={project}\n            vector={iVector.transform(matrix)}\n            text={iVectorName}\n            color={transformedColor}\n          />\n          <Arrow\n            project={project}\n            vector={jVector.transform(matrix)}\n            text={jVectorName}\n            color={transformedColor}\n          />\n        </>\n      )\n    }\n    return (\n      <>\n        <ContourView contour={contour} color={initialColor} project={project} />\n        <ContourView\n          contour={transformed}\n          color={transformedColor}\n          project={project}\n        />\n        <Vectors />\n      </>\n    )\n  }\n  const renderInformation = () => {\n    return (\n      <Expression>\n        <ExpressionPart>\n          <Text>det(</Text>\n          <InBrackets color={transformedColor} columns={matrix.columns()} />\n          <Text>)</Text>\n        </ExpressionPart>\n        <Text>{matrix.determinant()}</Text>\n      </Expression>\n    )\n  }\n  const props = { cells, renderInformation, renderGridContent }\n  return <GridExample {...props} />\n}\n\nexport default withTheme(LTExample)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport DeterminantExample from '../determinant-example'\n\nconst matrix = new Matrix([3, 0], [0, 2])\n\nexport default () => <DeterminantExample cells={4} matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport DeterminantExample from '../determinant-example'\n\nconst matrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => <DeterminantExample cells={4} matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport DeterminantExample from '../determinant-example'\n\nconst matrix = new Matrix([2, 1], [-1, -2])\n\nexport default () => (\n  <DeterminantExample withVectors cells={4} matrix={matrix} />\n)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport DeterminantExample from '../determinant-example'\n\nconst matrix = new Matrix([4, 2], [2, 1])\n\nexport default () => (\n  <DeterminantExample withVectors cells={5} matrix={matrix} />\n)\n","export const hexToRgb = hex =>\n  hex\n    .replace(\n      /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n      (m, r, g, b) => '#' + r + r + g + g + b + b\n    )\n    .substring(1)\n    .match(/.{2}/g)\n    .map(x => parseInt(x, 16))\n\nexport const rgbToHex = (r, g, b) =>\n  '#' + [r, g, b].map(x => x.toString(16).padStart(2, '0')).join('')\n","import { hexToRgb, rgbToHex } from './generic'\n\nexport const getGetAnimatedColor = (fromColor, toColor, period) => {\n  const fromRgb = hexToRgb(fromColor)\n  const toRgb = hexToRgb(toColor)\n  const distances = fromRgb.map((fromPart, index) => {\n    const toPart = toRgb[index]\n    return fromPart <= toPart ? toPart - fromPart : 255 - fromPart + toPart\n  })\n  const start = Date.now()\n  return () => {\n    const now = Date.now()\n    const timePassed = now - start\n    if (timePassed > period) return toColor\n\n    const animatedDistance = timePassed / period\n    const rgb = fromRgb.map((fromPart, index) => {\n      const distance = distances[index]\n      const step = distance * animatedDistance\n      return Math.round((fromPart + step) % 255)\n    })\n    return rgbToHex(...rgb)\n  }\n}\n\nexport const getGetAnimatedTransformation = (fromMatrix, toMatrix, period) => {\n  const distances = toMatrix.subtract(fromMatrix)\n  const start = Date.now()\n  return () => {\n    const now = Date.now()\n    const timePassed = now - start\n    if (timePassed > period) return toMatrix\n\n    const animatedDistance = timePassed / period\n    const newMatrix = fromMatrix.map((fromComponent, i, j) => {\n      const distance = distances.rows[i][j]\n      const step = distance * animatedDistance\n      return fromComponent + step\n    })\n    return newMatrix\n  }\n}\n","import * as THREE from 'three'\nimport { Matrix } from 'linear-algebra/matrix'\n\nexport const toMatrix4 = matrix => {\n  const matrix4 = new THREE.Matrix4()\n  matrix4.set(...matrix.components())\n  return matrix4\n}\n\nexport const fromMatrix4 = matrix4 => {\n  const components = matrix4.toArray()\n  const rows = new Array(4)\n    .fill(0)\n    .map((_, i) => components.slice(i * 4, (i + 1) * 4))\n  return new Matrix(...rows)\n}\n","import React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport * as THREE from 'three'\nimport OrbitControls from 'three-orbitcontrols'\n\nimport {\n  getGetAnimatedColor,\n  getGetAnimatedTransformation\n} from '../utils/animations'\nimport { toMatrix4, fromMatrix4 } from '../utils/three'\nimport Container from './example-container'\nimport InfoContainer from './info-container'\n\nconst View = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst PERIOD = 5000\n\nclass ThreeScene extends React.Component {\n  render() {\n    const Information = () => {\n      const { renderInformation, theme } = this.props\n      if (renderInformation) {\n        return renderInformation({ transformedColor: theme.color.blue })\n      }\n      return null\n    }\n    return (\n      <Container>\n        <View ref={el => (this.view = el)} />\n        <InfoContainer>\n          <Information />\n        </InfoContainer>\n      </Container>\n    )\n  }\n\n  componentDidMount() {\n    const { width, height } = this.view.getBoundingClientRect()\n    this.scene = new THREE.Scene()\n    this.camera = new THREE.PerspectiveCamera(100, width / height)\n    this.camera.position.set(1, 1, 4)\n\n    const { theme } = this.props\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor(theme.color.background)\n    this.renderer.setSize(width, height)\n    this.view.appendChild(this.renderer.domElement)\n\n    const initialColor = theme.color.red\n    const axes = new THREE.AxesHelper(4)\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    this.segments = new THREE.LineSegments(\n      new THREE.EdgesGeometry(geometry),\n      new THREE.LineBasicMaterial({ color: theme.color.mainText })\n    )\n    this.cube = new THREE.Mesh(\n      geometry,\n      new THREE.MeshBasicMaterial({ color: initialColor })\n    )\n    this.objects = [this.cube, this.segments]\n    this.objects.forEach(obj => (obj.matrixAutoUpdate = false))\n    this.scene.add(this.cube, axes, this.segments)\n\n    this.controls = new OrbitControls(this.camera)\n\n    this.getAnimatedColor = getGetAnimatedColor(\n      initialColor,\n      theme.color.blue,\n      PERIOD\n    )\n    const fromMatrix = fromMatrix4(this.cube.matrix)\n    const toMatrix = this.props.matrix.toDimension(4)\n    this.getAnimatedTransformation = getGetAnimatedTransformation(\n      fromMatrix,\n      toMatrix,\n      PERIOD\n    )\n    this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.frameId)\n    this.view.removeChild(this.renderer.domElement)\n  }\n\n  animate = () => {\n    const transformation = this.getAnimatedTransformation()\n    const matrix4 = toMatrix4(transformation)\n    this.cube.material.color.set(this.getAnimatedColor())\n    this.objects.forEach(obj => obj.matrix.set(...matrix4.toArray()))\n    this.renderer.render(this.scene, this.camera)\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n}\n\nexport default withTheme(ThreeScene)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport Example from '../3d-example'\nimport BracketedView from '../bracketed'\n\nconst matrix = new Matrix([1, 2, 0], [0, 1, 0], [0, 0, 1])\n\nexport default () => {\n  const renderInformation = ({ transformedColor }) => {\n    return (\n      <BracketedView\n        name=\"T\"\n        columns={matrix.columns()}\n        color={transformedColor}\n      />\n    )\n  }\n  return <Example renderInformation={renderInformation} matrix={matrix} />\n}\n","import React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport * as THREE from 'three'\nimport OrbitControls from 'three-orbitcontrols'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport {\n  getGetAnimatedColor,\n  getGetAnimatedTransformation\n} from '../../utils/animations'\nimport { toMatrix4, fromMatrix4 } from '../../utils/three'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst matrix = new Matrix([1, 2, 0], [0, 1, 0], [0, 0, 1])\n\nconst period = 5000\n\nclass ThreeScene extends React.Component {\n  render() {\n    return <Container ref={el => (this.container = el)} />\n  }\n\n  componentDidMount() {\n    const { width, height } = this.container.getBoundingClientRect()\n    this.scene = new THREE.Scene()\n    this.camera = new THREE.PerspectiveCamera(100, width / height)\n    this.camera.position.set(1, 1, 4)\n\n    const { theme } = this.props\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor(theme.color.background)\n    this.renderer.setSize(width, height)\n    this.container.appendChild(this.renderer.domElement)\n\n    const initialColor = theme.color.red\n    const axes = new THREE.AxesHelper(4)\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    this.segments = new THREE.LineSegments(\n      new THREE.EdgesGeometry(geometry),\n      new THREE.LineBasicMaterial({ color: theme.color.mainText })\n    )\n    this.cube = new THREE.Mesh(\n      geometry,\n      new THREE.MeshBasicMaterial({ color: initialColor })\n    )\n    this.objects = [this.cube, this.segments]\n    this.objects.forEach(obj => (obj.matrixAutoUpdate = false))\n    this.scene.add(this.cube, axes, this.segments)\n\n    this.controls = new OrbitControls(this.camera)\n\n    this.getAnimatedColor = getGetAnimatedColor(\n      initialColor,\n      theme.color.blue,\n      period\n    )\n    const fromMatrix = fromMatrix4(this.cube.matrix)\n    const toMatrix = matrix.toDimension(4)\n    this.getAnimatedTransformation = getGetAnimatedTransformation(\n      fromMatrix,\n      toMatrix,\n      period\n    )\n    this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.frameId)\n    this.container.removeChild(this.renderer.domElement)\n  }\n\n  animate = () => {\n    const transformation = this.getAnimatedTransformation()\n    const matrix4 = toMatrix4(transformation)\n    this.cube.material.color.set(this.getAnimatedColor())\n    this.objects.forEach(obj => obj.matrix.set(...matrix4.toArray()))\n    this.renderer.render(this.scene, this.camera)\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n}\n\nexport default withTheme(ThreeScene)\n","import { default as VectorLength } from './vector-length'\nimport { default as VectorScale } from './vector-scale'\nimport { default as VectorsAddition } from './vectors-addition'\nimport { default as VectorsSubtraction } from './vectors-subtraction'\nimport { default as VectorsDotProduct } from './vectors-dot-product'\nimport { default as VectorLinearCombination } from './vector-linear-combination'\nimport { default as LTReflection } from './linear-transformation-reflection'\nimport { default as LTScale } from './linear-transformation-scale'\nimport { default as LTRotation } from './linear-transformation-rotation'\nimport { default as LTShear } from './linear-transformation-shear'\nimport { default as MM } from './matrix-multiplication'\nimport { default as MMReversed } from './matrix-multiplication-reversed'\nimport { default as DeterminantScale } from './determinant-scale'\nimport { default as DeterminantShear } from './determinant-shear'\nimport { default as DeterminantNegative } from './determinant-negative'\nimport { default as DeterminantZero } from './determinant-zero'\nimport { default as LTShear3D } from './linear-transformation-3d-shear'\nimport { default as View3D } from './3d'\n\nexport default {\n  'vectors: addition': VectorsAddition,\n  'vectors: subtraction': VectorsSubtraction,\n  'vectors: length': VectorLength,\n  'vectors: scale': VectorScale,\n  'vectors: dot product': VectorsDotProduct,\n  'vectors: linear combination': VectorLinearCombination,\n  'linear transformation: reflection': LTReflection,\n  'linear transformation: scale': LTScale,\n  'linear transformation: rotation': LTRotation,\n  'linear transformation: shear': LTShear,\n  'linear transformation: shear 3D': LTShear3D,\n  'matrix-matrix multiplication: AB': MM,\n  'matrix-matrix multiplication: BA': MMReversed,\n  'determinant: scale transformation': DeterminantScale,\n  'determinant: shear transformation': DeterminantShear,\n  'determinant: negative': DeterminantNegative,\n  'determinant: zero': DeterminantZero,\n  '3D': View3D\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.p`\n  cursor: pointer;\n  margin: 10px;\n  color: ${p =>\n    p.selected ? p.theme.color.mainText : p.theme.color.secondaryText};\n  transition: 0.35s ease-in-out;\n  &:hover {\n    color: ${p => p.theme.color.mainText};\n  }\n`\n\nexport default ({ text, onClick, selected }) => (\n  <Container onClick={onClick} selected={selected}>\n    {text}\n  </Container>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport views from './views'\nimport MenuItem from './menu-item'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  flex-direction: row;\n  position: relative;\n`\n\nconst Menu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 40px;\n`\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      view: Object.keys(views)[0]\n    }\n  }\n\n  render() {\n    const { view } = this.state\n    const View = views[view]\n    const viewsNames = Object.keys(views)\n    const MenuItems = () =>\n      viewsNames.map(name => (\n        <MenuItem\n          key={name}\n          selected={name === view}\n          text={name}\n          onClick={() => this.setState({ view: name })}\n        />\n      ))\n    return (\n      <Container>\n        <View />\n        <Menu>\n          <MenuItems />\n        </Menu>\n      </Container>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\n\nimport { THEME } from './constants/theme'\nimport Main from './components/main'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n  body {\n    height: 100%;\n    background-color: ${p => p.theme.color.background};\n  }\n  #root {\n    height: 100%;\n  }\n\n  * {\n    margin: 0;\n    outline: none;\n    box-sizing: border-box;\n    font-family: sans-serif;\n    color: ${p => p.theme.color.mainText};\n  }\n`\nexport default () => (\n  <ThemeProvider theme={THEME}>\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  </ThemeProvider>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}