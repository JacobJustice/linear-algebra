{"version":3,"sources":["../../library/utils.js","../../library/contour.js","../../library/vector.js","../../library/constants.js","../../library/matrix.js","constants/theme.js","components/grid-line.js","components/grid.js","components/grid-example.js","components/arrow.js","components/text.js","components/expression.js","components/in-brackets.js","components/bracketed.js","components/declaration.js","components/views/vector-length.js","components/views/vector-scale.js","components/views/vectors-addition.js","components/views/vectors-subtraction.js","components/views/vectors-dot-product.js","components/views/vector-linear-combination.js","components/contour.js","components/linear-transformation-example.js","components/views/linear-transformation-reflection.js","components/views/linear-transformation-scale.js","components/views/linear-transformation-rotation.js","components/views/linear-transformation-shear.js","components/matrix-matrix-example.js","components/views/matrix-multiplication.js","components/views/matrix-multiplication-reversed.js","components/views/index.js","components/menu-item.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["EPSILON","__webpack_require__","module","exports","areEqual","one","other","epsilon","arguments","length","undefined","Math","abs","toDegrees","radians","PI","toRadians","degrees","sum","arr","reduce","acc","value","_classCallCheck","_createClass","Contour","vectors","this","key","matrix","map","v","transform","func","_construct","_toConsumableArray","_require","Vector","_len","components","Array","_key","_ref","_this","component","index","_ref2","_this2","number","hypot","apply","_ref3","_this3","scaleBy","dotProduct","normalize","_ref4","acos","newLength","normalized","_ref5","_this4","every","_this5","columns","Error","multiplied","column","i","c","newComponents","_","Matrix","rows","r","newRows","row","element","j","componentWiseOperation","a","b","THEME","color","background","mainText","secondaryText","green","blue","purple","yellow","orange","red","Line","styled","line","_templateObject","p","main","theme","grid_line","start","end","_ref$main","react_default","createElement","x1","y1","x2","y2","Container","div","grid_templateObject","getSide","width","height","min","MARGIN","getStepLen","cells","Grid","updateProject","size","step","props","vector","scaled","withNegatedY","middle","add","_this$props","children","side","stepLen","steps","floor","fill","concat","Object","toConsumableArray","React","Component","withSize","monitorHeight","grid_example_templateObject","InfoContainer","_templateObject2","Main","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","project","renderInformation","renderGridContent","grid_example_Container","grid","setState","Arrow","arrow_templateObject","Head","polygon","arrow_templateObject2","Text","text","_templateObject3","arrow","direction","headStart","headSide","headPoints","subtract","projectedStart","projectedEnd","points","withLength","x","y","text_templateObject","noMargin","expression_templateObject","withTheme","_ref$color","expression_Container","components_text","ComponentsContainer","in_brackets_templateObject","in_brackets_templateObject2","BracketsContainer","in_brackets_templateObject3","Bracket","_templateObject4","LeftBracket","_templateObject5","RightBracket","_templateObject6","in_brackets","ci","Number","isInteger","toFixed","bracketed","name","expression","declaration_templateObject","declaration","left","right","declaration_Text","oneColor","otherColor","Fragment","grid_example","firstScaleVector","firstScaleName","firstScaleColor","secondScaleVector","secondScaleName","secondScaleColor","sumColor","sumText","differenceColor","differenceText","linearCombination","iColor","jColor","linearCombinationName","linearCombinationColor","Polygon","contour_templateObject","components_contour","contour","transformedColor","transformed","angle","cos","sin","firstMatrix","secondMatrix","_ref$reversed","reversed","initialColor","firstColor","secondColor","resultColor","resultMatrix","multiply","AB","elements","reverse","Matrices","views","vectors: addition","VectorsAddition","vectors: subtraction","VectorsSubtraction","vectors: length","VectorLength","vectors: scale","VectorScale","vectors: dot product","VectorsDotProduct","vectors: linear combination","VectorLinearCombination","linear transformation: reflection","linear_transformation_example","linear transformation: scale","linear transformation: rotation","linear transformation: shear","matrix-matrix multiplication: AB","matrix_matrix_example","matrix-matrix multiplication: BA","menu_item_templateObject","selected","menu_item","onClick","menu_item_Container","main_templateObject","Menu","main_templateObject2","view","keys","View","viewsNames","main_Container","GlobalStyle","createGlobalStyle","App_templateObject","Boolean","window","location","hostname","match","ReactDOM","render","styled_components_browser_esm","components_main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.280d0457.chunk.js","sourcesContent":["var _require = require('./constants'),\n    EPSILON = _require.EPSILON;\n\nvar areEqual = function areEqual(one, other) {\n  var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(one - other) < epsilon;\n};\n\nvar toDegrees = function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar toRadians = function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar sum = function sum(arr) {\n  return arr.reduce(function (acc, value) {\n    return acc + value;\n  }, 0);\n};\n\nmodule.exports = {\n  areEqual: areEqual,\n  toDegrees: toDegrees,\n  toRadians: toRadians,\n  sum: sum\n};","var _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Contour =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Contour(vectors) {\n    _classCallCheck(this, Contour);\n\n    this.vectors = vectors;\n  }\n\n  _createClass(Contour, [{\n    key: \"transform\",\n    value: function transform(matrix) {\n      var newVectors = this.vectors.map(function (v) {\n        return v.transform(matrix);\n      });\n      return new Contour(newVectors);\n    }\n  }, {\n    key: \"map\",\n    value: function map(func) {\n      return new Contour(this.vectors.map(func));\n    }\n  }]);\n\n  return Contour;\n}();\n\nmodule.exports = {\n  Contour: Contour\n};","var _construct = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/construct\");\n\nvar _toConsumableArray = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./utils'),\n    areEqual = _require.areEqual,\n    toDegrees = _require.toDegrees,\n    sum = _require.sum;\n\nvar Vector =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n      components[_key] = arguments[_key];\n    }\n\n    this.components = components;\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(_ref) {\n      var _this = this;\n\n      var components = _ref.components;\n      return _construct(Vector, _toConsumableArray(components.map(function (component, index) {\n        return _this.components[index] + component;\n      })));\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(_ref2) {\n      var _this2 = this;\n\n      var components = _ref2.components;\n      return _construct(Vector, _toConsumableArray(components.map(function (component, index) {\n        return _this2.components[index] - component;\n      })));\n    }\n  }, {\n    key: \"scaleBy\",\n    value: function scaleBy(number) {\n      return _construct(Vector, _toConsumableArray(this.components.map(function (component) {\n        return component * number;\n      })));\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.hypot.apply(Math, _toConsumableArray(this.components));\n    }\n  }, {\n    key: \"dotProduct\",\n    value: function dotProduct(_ref3) {\n      var _this3 = this;\n\n      var components = _ref3.components;\n      return components.reduce(function (acc, component, index) {\n        return acc + component * _this3.components[index];\n      }, 0);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return this.scaleBy(1 / this.length());\n    }\n  }, {\n    key: \"haveSameDirectionWith\",\n    value: function haveSameDirectionWith(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, 1);\n    }\n  }, {\n    key: \"haveOppositeDirectionTo\",\n    value: function haveOppositeDirectionTo(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, -1);\n    }\n  }, {\n    key: \"isPerpendicularTo\",\n    value: function isPerpendicularTo(other) {\n      var dotProduct = this.normalize().dotProduct(other.normalize());\n      return areEqual(dotProduct, 0);\n    } // 3D vectors only\n\n  }, {\n    key: \"crossProduct\",\n    value: function crossProduct(_ref4) {\n      var components = _ref4.components;\n      return new Vector(this.components[1] * components[2] - this.components[2] * components[1], this.components[2] * components[0] - this.components[0] * components[2], this.components[0] * components[1] - this.components[1] * components[0]);\n    }\n  }, {\n    key: \"angleBetween\",\n    value: function angleBetween(other) {\n      return toDegrees(Math.acos(this.dotProduct(other) / (this.length() * other.length())));\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this.scaleBy(-1);\n    }\n  }, {\n    key: \"withLength\",\n    value: function withLength(newLength) {\n      return this.normalize().scaleBy(newLength);\n    }\n  }, {\n    key: \"projectOn\",\n    value: function projectOn(other) {\n      var normalized = other.normalize();\n      return normalized.scaleBy(this.dotProduct(normalized));\n    }\n  }, {\n    key: \"equalTo\",\n    value: function equalTo(_ref5) {\n      var _this4 = this;\n\n      var components = _ref5.components;\n      return components.every(function (component, index) {\n        return areEqual(component, _this4.components[index]);\n      });\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix) {\n      var _this5 = this;\n\n      var columns = matrix.columns();\n\n      if (columns.length !== this.components.length) {\n        throw new Error('Matrix columns length should be equal to vector components length.');\n      }\n\n      var multiplied = columns.map(function (column, i) {\n        return column.map(function (c) {\n          return c * _this5.components[i];\n        });\n      });\n      var newComponents = multiplied[0].map(function (_, i) {\n        return sum(multiplied.map(function (column) {\n          return column[i];\n        }));\n      });\n      return _construct(Vector, _toConsumableArray(newComponents));\n    }\n  }]);\n\n  return Vector;\n}();\n\nmodule.exports = {\n  Vector: Vector\n};","var EPSILON = 0.00000001;\nmodule.exports = {\n  EPSILON: EPSILON\n};","var _construct = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/construct\");\n\nvar _toConsumableArray = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/rodion/increaser/linear-algebra/linear-algebra-demo/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./utils'),\n    sum = _require.sum;\n\nvar Matrix =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Matrix() {\n    _classCallCheck(this, Matrix);\n\n    for (var _len = arguments.length, rows = new Array(_len), _key = 0; _key < _len; _key++) {\n      rows[_key] = arguments[_key];\n    }\n\n    this.rows = rows;\n  }\n\n  _createClass(Matrix, [{\n    key: \"columns\",\n    value: function columns() {\n      var _this = this;\n\n      return this.rows[0].map(function (_, i) {\n        return _this.rows.map(function (r) {\n          return r[i];\n        });\n      });\n    }\n  }, {\n    key: \"componentWiseOperation\",\n    value: function componentWiseOperation(func, _ref) {\n      var _this2 = this;\n\n      var rows = _ref.rows;\n      var newRows = rows.map(function (row, i) {\n        return row.map(function (element, j) {\n          return func(_this2.rows[i][j], element);\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      return this.componentWiseOperation(function (a, b) {\n        return a + b;\n      }, other);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.componentWiseOperation(function (a, b) {\n        return a - b;\n      }, other);\n    }\n  }, {\n    key: \"scaleBy\",\n    value: function scaleBy(number) {\n      var newRows = this.rows.map(function (row) {\n        return row.map(function (element) {\n          return element * number;\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(other) {\n      if (this.rows[0].length !== other.rows.length) {\n        throw new Error('The number of columns of this matrix is not equal to the number of rows of the given matrix.');\n      }\n\n      var columns = other.columns();\n      var newRows = this.rows.map(function (row) {\n        return columns.map(function (column) {\n          return sum(row.map(function (element, i) {\n            return element * column[i];\n          }));\n        });\n      });\n      return _construct(Matrix, _toConsumableArray(newRows));\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      return _construct(Matrix, _toConsumableArray(this.columns()));\n    }\n  }]);\n\n  return Matrix;\n}();\n\nmodule.exports = {\n  Matrix: Matrix\n};","export const THEME = {\n  color: {\n    background: '#2c3e50',\n    mainText: '#ffff',\n    secondaryText: '#bdc3c7',\n    green: '#2ecc71',\n    blue: '#3498db',\n    purple: '#9b59b6',\n    yellow: '#f1c40f',\n    orange: '#e67e22',\n    red: '#e74c3c'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Line = styled.line`\n  stroke-width: ${p => (p.main ? '1px' : '0.4px')};\n  stroke: ${p =>\n    p.main ? p.theme.color.mainText : p.theme.color.secondaryText};\n`\n\nexport default ({ start, end, main = false }) => {\n  return (\n    <Line\n      main={main}\n      x1={start.components[0]}\n      y1={start.components[1]}\n      x2={end.components[0]}\n      y2={end.components[1]}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { withSize } from 'react-sizeme'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridLine from './grid-line'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst MARGIN = 10\n\nconst getSide = ({ width, height }) => Math.min(width, height) - MARGIN * 2\n\nconst getStepLen = ({ width, height }, cells) => {\n  const side = getSide({ width, height })\n  const middle = side / 2\n  return middle / cells\n}\n\nclass Grid extends React.Component {\n  render() {\n    const { size, children, cells } = this.props\n    const side = getSide(size)\n    const middle = side / 2\n    const stepLen = middle / cells\n    const steps = new Array(Math.floor(middle / stepLen))\n      .fill(0)\n      .reduce(\n        (acc, _, i) => [...acc, stepLen * (i + 1), -stepLen * (i + 1)],\n        []\n      )\n\n    const XLines = () =>\n      steps.map((step, i) => (\n        <GridLine\n          key={i}\n          start={new Vector(middle + step, 0)}\n          end={new Vector(middle + step, side)}\n        />\n      ))\n    const YLines = () =>\n      steps.map((step, i) => (\n        <GridLine\n          key={i}\n          start={new Vector(0, middle + step)}\n          end={new Vector(side, middle + step)}\n        />\n      ))\n\n    return (\n      <Container>\n        <svg width={side} height={side}>\n          <g>\n            <GridLine\n              main\n              start={new Vector(middle, 0)}\n              end={new Vector(middle, side)}\n            />\n            <GridLine\n              main\n              start={new Vector(0, middle)}\n              end={new Vector(side, middle)}\n            />\n            <XLines />\n            <YLines />\n          </g>\n          {children}\n        </svg>\n      </Container>\n    )\n  }\n\n  updateProject = (size, cells) => {\n    const step = getStepLen(size, cells)\n    this.props.updateProject(vector => {\n      // we don't have transformation method in vector class yet, so:\n      const scaled = vector.scaleBy(step)\n      const withNegatedY = new Vector(\n        scaled.components[0],\n        -scaled.components[1]\n      )\n      const middle = getSide(size) / 2\n      return withNegatedY.add(new Vector(middle, middle))\n    })\n  }\n\n  componentWillReceiveProps({ size, cells }) {\n    if (this.props.updateProject) {\n      const newStepLen = getStepLen(size, cells)\n      const oldStepLen = getStepLen(this.props.size, cells)\n      if (newStepLen !== oldStepLen) {\n        this.updateProject(size, cells)\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.updateProject) {\n      this.updateProject(this.props.size, this.props.cells)\n    }\n  }\n}\n\nexport default withSize({ monitorHeight: true })(Grid)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Grid from './grid'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  flex-direction: row;\n  position: relative;\n`\n\nconst InfoContainer = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      project: undefined\n    }\n  }\n  render() {\n    const { project } = this.state\n    const { renderInformation, renderGridContent } = this.props\n    const Content = () => {\n      if (project && renderGridContent) {\n        return renderGridContent({ project })\n      }\n      return null\n    }\n    const Information = () => {\n      if (renderInformation) {\n        return renderInformation()\n      }\n      return null\n    }\n    return (\n      <Container>\n        <Grid cells={10} updateProject={project => this.setState({ project })}>\n          <Content />\n        </Grid>\n        <InfoContainer>\n          <Information />\n        </InfoContainer>\n      </Container>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nconst Arrow = styled.line`\n  stroke-width: 2px;\n  stroke: ${p => p.color};\n`\n\nconst Head = styled.polygon`\n  fill: ${p => p.color};\n`\n\nconst Text = styled.text`\n  font-size: 24px;\n  fill: ${p => p.color};\n`\n\nexport default ({ vector, text, color, project }) => {\n  const direction = vector.normalize()\n\n  const headStart = direction.scaleBy(vector.length() - 0.6)\n  const headSide = new Vector(\n    direction.components[1],\n    -direction.components[0]\n  ).scaleBy(0.2)\n  const headPoints = [\n    headStart.add(headSide),\n    headStart.subtract(headSide),\n    vector\n  ]\n    .map(project)\n    .map(v => v.components)\n\n  const projectedStart = project(new Vector(0, 0))\n  const projectedEnd = project(vector)\n\n  const PositionedText = () => {\n    if (!text) return null\n    const { components } = project(vector.withLength(vector.length() + 0.2))\n    return (\n      <Text color={color} x={components[0]} y={components[1]}>\n        {text}\n      </Text>\n    )\n  }\n  return (\n    <g>\n      <Arrow\n        color={color}\n        x1={projectedStart.components[0]}\n        y1={projectedStart.components[1]}\n        x2={projectedEnd.components[0]}\n        y2={projectedEnd.components[1]}\n      />\n      <Head color={color} points={headPoints} />\n      <PositionedText />\n    </g>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.p`\n  color: ${p => p.color};\n  margin-right: ${p => (p.noMargin ? '0px' : '6px')};\n`\n","import React from 'react'\nimport styled, { withTheme } from 'styled-components'\n\nimport Text from './text'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: ${p => p.color};\n  margin: 10px;\n  font-size: 24px;\n`\nconst Expression = ({ children, theme, color = theme.color.mainText }) => {\n  const Content = () =>\n    children.reduce((acc, component, i) => {\n      if (i === children.length - 1) return [...acc, component]\n      return [\n        ...acc,\n        component,\n        <Text key={i} color={color}>\n          {' '}\n          ={' '}\n        </Text>\n      ]\n    }, [])\n  return (\n    <Container>\n      <Content />\n    </Container>\n  )\n}\n\nexport default withTheme(Expression)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ComponentsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`\n\nconst Component = styled.p`\n  color: ${p => p.color};\n  margin: 4px;\n`\n\nconst BracketsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 6px;\n`\n\nconst Bracket = styled.div`\n  width: 8px;\n  border-top: 1px solid ${p => p.color};\n  border-bottom: 1px solid ${p => p.color};\n`\n\nconst LeftBracket = styled(Bracket)`\n  border-left: 1px solid ${p => p.color};\n`\n\nconst RightBracket = styled(Bracket)`\n  border-right: 1px solid ${p => p.color};\n`\n\nexport default ({ color, columns }) => {\n  const Components = () =>\n    columns.map((column, ci) => (\n      <ComponentsContainer key={ci}>\n        {column.map((component, i) => (\n          <Component color={color} key={i}>\n            {Number.isInteger(component) ? component : component.toFixed(2)}\n          </Component>\n        ))}\n      </ComponentsContainer>\n    ))\n\n  return (\n    <BracketsContainer>\n      <LeftBracket color={color} />\n      <Components />\n      <RightBracket color={color} />\n    </BracketsContainer>\n  )\n}\n","import React from 'react'\n\nimport Expression from './expression'\nimport InBrackets from './in-brackets'\nimport Text from './text'\n\nexport default ({ columns, name, color }) => (\n  <Expression color={color}>\n    <Text color={color}>{name}</Text>\n    <InBrackets columns={columns} color={color} />\n  </Expression>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Expression from './expression'\n\nconst Text = styled.p`\n  color: ${p => p.color};\n  margin-right: 6px;\n`\n\nexport default ({ left, right, color }) => (\n  <Expression color={color}>\n    <Text>{left}</Text>\n    <Text>{right}</Text>\n  </Expression>\n)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\nimport Declaration from '../declaration'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const oneName = 'v⃗'\n  const oneColor = theme.color.green\n\n  const other = new Vector(6, 2)\n  const otherName = 'w⃗'\n  const otherColor = theme.color.red\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <Declaration left={`||${oneName}||`} right={one.length().toFixed(2)} />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <Declaration\n        left={`||${otherName}||`}\n        right={other.length().toFixed(2)}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const vector = new Vector(2, 4)\n  const name = 'v⃗'\n  const color = theme.color.green\n\n  const firstScale = 0.5\n  const firstScaleVector = vector.scaleBy(firstScale)\n  const firstScaleName = `${firstScale}${name}`\n  const firstScaleColor = theme.color.red\n\n  const secondScale = -2\n  const secondScaleVector = vector.scaleBy(secondScale)\n  const secondScaleName = `${secondScale}${name}`\n  const secondScaleColor = theme.color.blue\n\n  const renderInformation = () => (\n    <>\n      <BracketedView columns={[vector.components]} name={name} color={color} />\n      <BracketedView\n        columns={[firstScaleVector.components]}\n        name={firstScaleName}\n        color={firstScaleColor}\n      />\n      <BracketedView\n        columns={[secondScaleVector.components]}\n        name={secondScaleName}\n        color={secondScaleColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={vector} text={name} color={color} />\n      <Arrow\n        project={project}\n        vector={firstScaleVector}\n        text={firstScaleName}\n        color={firstScaleColor}\n      />\n      <Arrow\n        project={project}\n        vector={secondScaleVector}\n        text={secondScaleName}\n        color={secondScaleColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const sum = one.add(other)\n  const sumColor = theme.color.blue\n  const sumText = `${oneName} + ${otherName}`\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <BracketedView\n        columns={[sum.components]}\n        name={sumText}\n        color={sumColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n      <Arrow project={project} vector={sum} text={sumText} color={sumColor} />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const sum = one.subtract(other)\n  const differenceColor = theme.color.blue\n  const differenceText = `${oneName} - ${otherName}`\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <BracketedView\n        columns={[sum.components]}\n        name={differenceText}\n        color={differenceColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n      <Arrow\n        project={project}\n        vector={sum}\n        text={differenceText}\n        color={differenceColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\nimport Declaration from '../declaration'\n\nconst VectorsDotProduct = ({ theme }) => {\n  const one = new Vector(0, 5)\n  const other = new Vector(6, 2)\n  const oneName = 'v⃗'\n  const otherName = 'w⃗'\n  const oneColor = theme.color.green\n  const otherColor = theme.color.red\n  const dotProduct = one.dotProduct(other).toFixed(2)\n\n  const renderInformation = () => (\n    <>\n      <BracketedView\n        columns={[one.components]}\n        name={oneName}\n        color={oneColor}\n      />\n      <BracketedView\n        columns={[other.components]}\n        name={otherName}\n        color={otherColor}\n      />\n      <Declaration left={'v⃗ · w⃗'} right={dotProduct} />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={one} text={oneName} color={oneColor} />\n      <Arrow\n        project={project}\n        vector={other}\n        text={otherName}\n        color={otherColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsDotProduct)\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from '../grid-example'\nimport Arrow from '../arrow'\nimport BracketedView from '../bracketed'\n\nconst VectorsAddition = ({ theme }) => {\n  const i = new Vector(1, 0)\n  const j = new Vector(0, 1)\n  const firstCoeff = 2\n  const secondCoeff = 5\n  const linearCombination = i.scaleBy(firstCoeff).add(j.scaleBy(secondCoeff))\n\n  const iName = 'i⃗'\n  const iColor = theme.color.green\n  const jName = 'j⃗'\n  const jColor = theme.color.red\n  const linearCombinationName = `v⃗ = ${firstCoeff}${iName} + ${secondCoeff}${jName}`\n  const linearCombinationColor = theme.color.blue\n\n  const renderInformation = () => (\n    <>\n      <BracketedView columns={[i.components]} name={iName} color={iColor} />\n      <BracketedView columns={[j.components]} name={jName} color={jColor} />\n      <BracketedView\n        columns={[linearCombination.components]}\n        name={linearCombinationName}\n        color={linearCombinationColor}\n      />\n    </>\n  )\n  const renderGridContent = ({ project }) => (\n    <>\n      <Arrow project={project} vector={i} text={iName} color={iColor} />\n      <Arrow project={project} vector={j} text={jName} color={jColor} />\n      <Arrow\n        project={project}\n        vector={linearCombination}\n        text={linearCombinationName}\n        color={linearCombinationColor}\n      />\n    </>\n  )\n  const props = { renderInformation, renderGridContent }\n\n  return <GridExample {...props} />\n}\n\nexport default withTheme(VectorsAddition)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Polygon = styled.polygon`\n  fill: ${p => p.color};\n  opacity: 0.2;\n`\n\nexport default ({ contour, color, project }) => {\n  const points = contour.map(project).vectors.map(v => v.components)\n  return <Polygon points={points} color={color} />\n}\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Contour } from 'linear-algebra/contour'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from './grid-example'\nimport BracketedView from './bracketed'\nimport ContourView from './contour'\n\nconst contour = new Contour([\n  new Vector(0, 0),\n  new Vector(0, 4),\n  new Vector(4, 4),\n  new Vector(4, 0)\n])\n\nconst LTExample = ({ theme, matrix }) => {\n  const transformedColor = theme.color.blue\n  const renderGridContent = ({ project }) => {\n    const transformed = contour.transform(matrix)\n    return (\n      <>\n        <ContourView\n          contour={contour}\n          color={theme.color.red}\n          project={project}\n        />\n        <ContourView\n          contour={transformed}\n          color={transformedColor}\n          project={project}\n        />\n      </>\n    )\n  }\n  const renderInformation = () => {\n    return (\n      <BracketedView\n        name=\"T\"\n        columns={matrix.columns()}\n        color={transformedColor}\n      />\n    )\n  }\n  const props = { renderInformation, renderGridContent }\n  return <GridExample {...props} />\n}\n\nexport default withTheme(LTExample)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([-1, 0], [0, 1])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([2, 0], [0, 2])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\nimport { toRadians } from 'linear-algebra/utils'\nimport LTExample from '../linear-transformation-example'\n\nconst angle = toRadians(45)\n\nconst matrix = new Matrix(\n  [Math.cos(angle), -Math.sin(angle)],\n  [Math.sin(angle), Math.cos(angle)]\n)\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\nimport LTExample from '../linear-transformation-example'\n\nconst matrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => <LTExample matrix={matrix} />\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { Contour } from 'linear-algebra/contour'\nimport { Vector } from 'linear-algebra/vector'\n\nimport GridExample from './grid-example'\nimport Expression from './expression'\nimport InBrackets from './in-brackets'\nimport Text from './text'\nimport ContourView from './contour'\n\nconst contour = new Contour([\n  new Vector(0, 0),\n  new Vector(0, 4),\n  new Vector(4, 4),\n  new Vector(4, 0)\n])\n\nconst LTExample = ({ firstMatrix, secondMatrix, reversed = false, theme }) => {\n  const initialColor = theme.color.red\n  const firstColor = theme.color.blue\n  const secondColor = theme.color.green\n  const resultColor = theme.color.yellow\n  const resultMatrix = reversed\n    ? firstMatrix.multiply(secondMatrix)\n    : secondMatrix.multiply(firstMatrix)\n  const renderGridContent = ({ project }) => {\n    const transformed = contour.transform(resultMatrix)\n    return (\n      <>\n        <ContourView contour={contour} color={initialColor} project={project} />\n        <ContourView\n          contour={transformed}\n          color={resultColor}\n          project={project}\n        />\n      </>\n    )\n  }\n  const AB = () => {\n    const elements = [\n      <Text key={'A'} color={firstColor}>\n        A\n      </Text>,\n      <Text key={'B'} color={secondColor}>\n        B\n      </Text>\n    ]\n    return reversed ? elements.reverse() : elements\n  }\n  const Matrices = () => {\n    const elements = [\n      <InBrackets\n        key={'A'}\n        color={firstColor}\n        columns={firstMatrix.columns()}\n      />,\n      <InBrackets\n        key={'B'}\n        color={secondColor}\n        columns={secondMatrix.columns()}\n      />\n    ]\n    return reversed ? elements.reverse() : elements\n  }\n  const renderInformation = () => {\n    return (\n      <Expression>\n        <Text color={resultColor}>C</Text>\n        <AB />\n        <Matrices />\n        <InBrackets color={resultColor} columns={resultMatrix.columns()} />\n      </Expression>\n    )\n  }\n  const props = { renderInformation, renderGridContent }\n  return <GridExample {...props} />\n}\n\nexport default withTheme(LTExample)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport MMExample from '../matrix-matrix-example'\n\nconst firstMatrix = new Matrix([-1, 0], [0, 1])\nconst secondMatrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => (\n  <MMExample firstMatrix={firstMatrix} secondMatrix={secondMatrix} />\n)\n","import React from 'react'\nimport { Matrix } from 'linear-algebra/matrix'\n\nimport MMExample from '../matrix-matrix-example'\n\nconst firstMatrix = new Matrix([-1, 0], [0, 1])\nconst secondMatrix = new Matrix([1, 0.5], [0, 1])\n\nexport default () => (\n  <MMExample firstMatrix={firstMatrix} secondMatrix={secondMatrix} reversed />\n)\n","import { default as VectorLength } from './vector-length'\nimport { default as VectorScale } from './vector-scale'\nimport { default as VectorsAddition } from './vectors-addition'\nimport { default as VectorsSubtraction } from './vectors-subtraction'\nimport { default as VectorsDotProduct } from './vectors-dot-product'\nimport { default as VectorLinearCombination } from './vector-linear-combination'\nimport { default as LTReflection } from './linear-transformation-reflection'\nimport { default as LTScale } from './linear-transformation-scale'\nimport { default as LTRotation } from './linear-transformation-rotation'\nimport { default as LTShear } from './linear-transformation-shear'\nimport { default as MM } from './matrix-multiplication'\nimport { default as MMReversed } from './matrix-multiplication-reversed'\n\nexport default {\n  'vectors: addition': VectorsAddition,\n  'vectors: subtraction': VectorsSubtraction,\n  'vectors: length': VectorLength,\n  'vectors: scale': VectorScale,\n  'vectors: dot product': VectorsDotProduct,\n  'vectors: linear combination': VectorLinearCombination,\n  'linear transformation: reflection': LTReflection,\n  'linear transformation: scale': LTScale,\n  'linear transformation: rotation': LTRotation,\n  'linear transformation: shear': LTShear,\n  'matrix-matrix multiplication: AB': MM,\n  'matrix-matrix multiplication: BA': MMReversed\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.p`\n  cursor: pointer;\n  margin: 10px;\n  color: ${p =>\n    p.selected ? p.theme.color.mainText : p.theme.color.secondaryText};\n  transition: 0.35s ease-in-out;\n  &:hover {\n    color: ${p => p.theme.color.mainText};\n  }\n`\n\nexport default ({ text, onClick, selected }) => (\n  <Container onClick={onClick} selected={selected}>\n    {text}\n  </Container>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport views from './views'\nimport MenuItem from './menu-item'\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  flex-direction: row;\n  position: relative;\n`\n\nconst Menu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 40px;\n`\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      view: Object.keys(views)[0]\n    }\n  }\n\n  render() {\n    const { view } = this.state\n    const View = views[view]\n    const viewsNames = Object.keys(views)\n    const MenuItems = () =>\n      viewsNames.map(name => (\n        <MenuItem\n          key={name}\n          selected={name === view}\n          text={name}\n          onClick={() => this.setState({ view: name })}\n        />\n      ))\n    return (\n      <Container>\n        <View />\n        <Menu>\n          <MenuItems />\n        </Menu>\n      </Container>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\n\nimport { THEME } from './constants/theme'\nimport Main from './components/main'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n  body {\n    height: 100%;\n    background-color: ${p => p.theme.color.background};\n  }\n  #root {\n    height: 100%;\n  }\n\n  * {\n    margin: 0;\n    outline: none;\n    box-sizing: border-box;\n    font-family: sans-serif;\n    color: ${p => p.theme.color.mainText};\n  }\n`\nexport default () => (\n  <ThemeProvider theme={THEME}>\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  </ThemeProvider>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}